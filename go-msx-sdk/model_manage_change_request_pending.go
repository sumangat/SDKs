/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// ManageChangeRequestPending struct for ManageChangeRequestPending
type ManageChangeRequestPending struct {
	ChangeRequestId *string `json:"changeRequestId,omitempty"`
	ChangeRequestUrl *string `json:"changeRequestUrl,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ManageChangeRequestPending ManageChangeRequestPending

// NewManageChangeRequestPending instantiates a new ManageChangeRequestPending object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManageChangeRequestPending() *ManageChangeRequestPending {
	this := ManageChangeRequestPending{}
	return &this
}

// NewManageChangeRequestPendingWithDefaults instantiates a new ManageChangeRequestPending object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManageChangeRequestPendingWithDefaults() *ManageChangeRequestPending {
	this := ManageChangeRequestPending{}
	return &this
}

// GetChangeRequestId returns the ChangeRequestId field value if set, zero value otherwise.
func (o *ManageChangeRequestPending) GetChangeRequestId() string {
	if o == nil || o.ChangeRequestId == nil {
		var ret string
		return ret
	}
	return *o.ChangeRequestId
}

// GetChangeRequestIdOk returns a tuple with the ChangeRequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManageChangeRequestPending) GetChangeRequestIdOk() (*string, bool) {
	if o == nil || o.ChangeRequestId == nil {
		return nil, false
	}
	return o.ChangeRequestId, true
}

// HasChangeRequestId returns a boolean if a field has been set.
func (o *ManageChangeRequestPending) HasChangeRequestId() bool {
	if o != nil && o.ChangeRequestId != nil {
		return true
	}

	return false
}

// SetChangeRequestId gets a reference to the given string and assigns it to the ChangeRequestId field.
func (o *ManageChangeRequestPending) SetChangeRequestId(v string) {
	o.ChangeRequestId = &v
}

// GetChangeRequestUrl returns the ChangeRequestUrl field value if set, zero value otherwise.
func (o *ManageChangeRequestPending) GetChangeRequestUrl() string {
	if o == nil || o.ChangeRequestUrl == nil {
		var ret string
		return ret
	}
	return *o.ChangeRequestUrl
}

// GetChangeRequestUrlOk returns a tuple with the ChangeRequestUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManageChangeRequestPending) GetChangeRequestUrlOk() (*string, bool) {
	if o == nil || o.ChangeRequestUrl == nil {
		return nil, false
	}
	return o.ChangeRequestUrl, true
}

// HasChangeRequestUrl returns a boolean if a field has been set.
func (o *ManageChangeRequestPending) HasChangeRequestUrl() bool {
	if o != nil && o.ChangeRequestUrl != nil {
		return true
	}

	return false
}

// SetChangeRequestUrl gets a reference to the given string and assigns it to the ChangeRequestUrl field.
func (o *ManageChangeRequestPending) SetChangeRequestUrl(v string) {
	o.ChangeRequestUrl = &v
}

func (o ManageChangeRequestPending) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ChangeRequestId != nil {
		toSerialize["changeRequestId"] = o.ChangeRequestId
	}
	if o.ChangeRequestUrl != nil {
		toSerialize["changeRequestUrl"] = o.ChangeRequestUrl
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ManageChangeRequestPending) UnmarshalJSON(bytes []byte) (err error) {
	varManageChangeRequestPending := _ManageChangeRequestPending{}

	if err = json.Unmarshal(bytes, &varManageChangeRequestPending); err == nil {
		*o = ManageChangeRequestPending(varManageChangeRequestPending)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "changeRequestId")
		delete(additionalProperties, "changeRequestUrl")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableManageChangeRequestPending struct {
	value *ManageChangeRequestPending
	isSet bool
}

func (v NullableManageChangeRequestPending) Get() *ManageChangeRequestPending {
	return v.value
}

func (v *NullableManageChangeRequestPending) Set(val *ManageChangeRequestPending) {
	v.value = val
	v.isSet = true
}

func (v NullableManageChangeRequestPending) IsSet() bool {
	return v.isSet
}

func (v *NullableManageChangeRequestPending) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManageChangeRequestPending(val *ManageChangeRequestPending) *NullableManageChangeRequestPending {
	return &NullableManageChangeRequestPending{value: val, isSet: true}
}

func (v NullableManageChangeRequestPending) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManageChangeRequestPending) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


