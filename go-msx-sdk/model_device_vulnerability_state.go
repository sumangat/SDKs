/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
	"fmt"
)

// DeviceVulnerabilityState the model 'DeviceVulnerabilityState'
type DeviceVulnerabilityState string

// List of DeviceVulnerabilityState
const (
	DEVICEVULNERABILITYSTATE_VULNERABLE DeviceVulnerabilityState = "VULNERABLE"
	DEVICEVULNERABILITYSTATE_NOT_VULNERABLE DeviceVulnerabilityState = "NOT_VULNERABLE"
	DEVICEVULNERABILITYSTATE_NOT_APPLICABLE DeviceVulnerabilityState = "NOT_APPLICABLE"
	DEVICEVULNERABILITYSTATE_UNKNOWN DeviceVulnerabilityState = "UNKNOWN"
)

func (v *DeviceVulnerabilityState) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DeviceVulnerabilityState(value)
	for _, existing := range []DeviceVulnerabilityState{ "VULNERABLE", "NOT_VULNERABLE", "NOT_APPLICABLE", "UNKNOWN",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DeviceVulnerabilityState", value)
}

// Ptr returns reference to DeviceVulnerabilityState value
func (v DeviceVulnerabilityState) Ptr() *DeviceVulnerabilityState {
	return &v
}

type NullableDeviceVulnerabilityState struct {
	value *DeviceVulnerabilityState
	isSet bool
}

func (v NullableDeviceVulnerabilityState) Get() *DeviceVulnerabilityState {
	return v.value
}

func (v *NullableDeviceVulnerabilityState) Set(val *DeviceVulnerabilityState) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceVulnerabilityState) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceVulnerabilityState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceVulnerabilityState(val *DeviceVulnerabilityState) *NullableDeviceVulnerabilityState {
	return &NullableDeviceVulnerabilityState{value: val, isSet: true}
}

func (v NullableDeviceVulnerabilityState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceVulnerabilityState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

