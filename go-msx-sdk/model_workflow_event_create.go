/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// WorkflowEventCreate struct for WorkflowEventCreate
type WorkflowEventCreate struct {
	Title string `json:"title"`
	Description *string `json:"description,omitempty"`
	TargetId string `json:"target_id"`
	SchemaId string `json:"schema_id"`
	Properties map[string]interface{} `json:"properties"`
	AdditionalProperties map[string]interface{}
}

type _WorkflowEventCreate WorkflowEventCreate

// NewWorkflowEventCreate instantiates a new WorkflowEventCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowEventCreate(title string, targetId string, schemaId string, properties map[string]interface{}) *WorkflowEventCreate {
	this := WorkflowEventCreate{}
	this.Title = title
	this.TargetId = targetId
	this.SchemaId = schemaId
	this.Properties = properties
	return &this
}

// NewWorkflowEventCreateWithDefaults instantiates a new WorkflowEventCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowEventCreateWithDefaults() *WorkflowEventCreate {
	this := WorkflowEventCreate{}
	return &this
}

// GetTitle returns the Title field value
func (o *WorkflowEventCreate) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *WorkflowEventCreate) GetTitleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *WorkflowEventCreate) SetTitle(v string) {
	o.Title = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WorkflowEventCreate) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowEventCreate) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WorkflowEventCreate) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WorkflowEventCreate) SetDescription(v string) {
	o.Description = &v
}

// GetTargetId returns the TargetId field value
func (o *WorkflowEventCreate) GetTargetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value
// and a boolean to check if the value has been set.
func (o *WorkflowEventCreate) GetTargetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TargetId, true
}

// SetTargetId sets field value
func (o *WorkflowEventCreate) SetTargetId(v string) {
	o.TargetId = v
}

// GetSchemaId returns the SchemaId field value
func (o *WorkflowEventCreate) GetSchemaId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SchemaId
}

// GetSchemaIdOk returns a tuple with the SchemaId field value
// and a boolean to check if the value has been set.
func (o *WorkflowEventCreate) GetSchemaIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SchemaId, true
}

// SetSchemaId sets field value
func (o *WorkflowEventCreate) SetSchemaId(v string) {
	o.SchemaId = v
}

// GetProperties returns the Properties field value
func (o *WorkflowEventCreate) GetProperties() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value
// and a boolean to check if the value has been set.
func (o *WorkflowEventCreate) GetPropertiesOk() (*map[string]interface{}, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Properties, true
}

// SetProperties sets field value
func (o *WorkflowEventCreate) SetProperties(v map[string]interface{}) {
	o.Properties = v
}

func (o WorkflowEventCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["title"] = o.Title
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["target_id"] = o.TargetId
	}
	if true {
		toSerialize["schema_id"] = o.SchemaId
	}
	if true {
		toSerialize["properties"] = o.Properties
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *WorkflowEventCreate) UnmarshalJSON(bytes []byte) (err error) {
	varWorkflowEventCreate := _WorkflowEventCreate{}

	if err = json.Unmarshal(bytes, &varWorkflowEventCreate); err == nil {
		*o = WorkflowEventCreate(varWorkflowEventCreate)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "title")
		delete(additionalProperties, "description")
		delete(additionalProperties, "target_id")
		delete(additionalProperties, "schema_id")
		delete(additionalProperties, "properties")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWorkflowEventCreate struct {
	value *WorkflowEventCreate
	isSet bool
}

func (v NullableWorkflowEventCreate) Get() *WorkflowEventCreate {
	return v.value
}

func (v *NullableWorkflowEventCreate) Set(val *WorkflowEventCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowEventCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowEventCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowEventCreate(val *WorkflowEventCreate) *NullableWorkflowEventCreate {
	return &NullableWorkflowEventCreate{value: val, isSet: true}
}

func (v NullableWorkflowEventCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowEventCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


