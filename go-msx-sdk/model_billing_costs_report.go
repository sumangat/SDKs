/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// BillingCostsReport struct for BillingCostsReport
type BillingCostsReport struct {
	TenantId *string `json:"tenantId,omitempty"`
	Details *[]CostSummary `json:"details,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BillingCostsReport BillingCostsReport

// NewBillingCostsReport instantiates a new BillingCostsReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingCostsReport() *BillingCostsReport {
	this := BillingCostsReport{}
	return &this
}

// NewBillingCostsReportWithDefaults instantiates a new BillingCostsReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingCostsReportWithDefaults() *BillingCostsReport {
	this := BillingCostsReport{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *BillingCostsReport) GetTenantId() string {
	if o == nil || o.TenantId == nil {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingCostsReport) GetTenantIdOk() (*string, bool) {
	if o == nil || o.TenantId == nil {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *BillingCostsReport) HasTenantId() bool {
	if o != nil && o.TenantId != nil {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *BillingCostsReport) SetTenantId(v string) {
	o.TenantId = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *BillingCostsReport) GetDetails() []CostSummary {
	if o == nil || o.Details == nil {
		var ret []CostSummary
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingCostsReport) GetDetailsOk() (*[]CostSummary, bool) {
	if o == nil || o.Details == nil {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *BillingCostsReport) HasDetails() bool {
	if o != nil && o.Details != nil {
		return true
	}

	return false
}

// SetDetails gets a reference to the given []CostSummary and assigns it to the Details field.
func (o *BillingCostsReport) SetDetails(v []CostSummary) {
	o.Details = &v
}

func (o BillingCostsReport) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TenantId != nil {
		toSerialize["tenantId"] = o.TenantId
	}
	if o.Details != nil {
		toSerialize["details"] = o.Details
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BillingCostsReport) UnmarshalJSON(bytes []byte) (err error) {
	varBillingCostsReport := _BillingCostsReport{}

	if err = json.Unmarshal(bytes, &varBillingCostsReport); err == nil {
		*o = BillingCostsReport(varBillingCostsReport)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "tenantId")
		delete(additionalProperties, "details")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBillingCostsReport struct {
	value *BillingCostsReport
	isSet bool
}

func (v NullableBillingCostsReport) Get() *BillingCostsReport {
	return v.value
}

func (v *NullableBillingCostsReport) Set(val *BillingCostsReport) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingCostsReport) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingCostsReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingCostsReport(val *BillingCostsReport) *NullableBillingCostsReport {
	return &NullableBillingCostsReport{value: val, isSet: true}
}

func (v NullableBillingCostsReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingCostsReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


