/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
	"time"
)

// VulnerabilityValidation Execution of vulnerability validation task
type VulnerabilityValidation struct {
	Id *string `json:"id,omitempty"`
	ExecutedOn *time.Time `json:"executedOn,omitempty"`
	Product *string `json:"product,omitempty"`
	Message *string `json:"message,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _VulnerabilityValidation VulnerabilityValidation

// NewVulnerabilityValidation instantiates a new VulnerabilityValidation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVulnerabilityValidation() *VulnerabilityValidation {
	this := VulnerabilityValidation{}
	return &this
}

// NewVulnerabilityValidationWithDefaults instantiates a new VulnerabilityValidation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVulnerabilityValidationWithDefaults() *VulnerabilityValidation {
	this := VulnerabilityValidation{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VulnerabilityValidation) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityValidation) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VulnerabilityValidation) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VulnerabilityValidation) SetId(v string) {
	o.Id = &v
}

// GetExecutedOn returns the ExecutedOn field value if set, zero value otherwise.
func (o *VulnerabilityValidation) GetExecutedOn() time.Time {
	if o == nil || o.ExecutedOn == nil {
		var ret time.Time
		return ret
	}
	return *o.ExecutedOn
}

// GetExecutedOnOk returns a tuple with the ExecutedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityValidation) GetExecutedOnOk() (*time.Time, bool) {
	if o == nil || o.ExecutedOn == nil {
		return nil, false
	}
	return o.ExecutedOn, true
}

// HasExecutedOn returns a boolean if a field has been set.
func (o *VulnerabilityValidation) HasExecutedOn() bool {
	if o != nil && o.ExecutedOn != nil {
		return true
	}

	return false
}

// SetExecutedOn gets a reference to the given time.Time and assigns it to the ExecutedOn field.
func (o *VulnerabilityValidation) SetExecutedOn(v time.Time) {
	o.ExecutedOn = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *VulnerabilityValidation) GetProduct() string {
	if o == nil || o.Product == nil {
		var ret string
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityValidation) GetProductOk() (*string, bool) {
	if o == nil || o.Product == nil {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *VulnerabilityValidation) HasProduct() bool {
	if o != nil && o.Product != nil {
		return true
	}

	return false
}

// SetProduct gets a reference to the given string and assigns it to the Product field.
func (o *VulnerabilityValidation) SetProduct(v string) {
	o.Product = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *VulnerabilityValidation) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityValidation) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *VulnerabilityValidation) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *VulnerabilityValidation) SetMessage(v string) {
	o.Message = &v
}

func (o VulnerabilityValidation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ExecutedOn != nil {
		toSerialize["executedOn"] = o.ExecutedOn
	}
	if o.Product != nil {
		toSerialize["product"] = o.Product
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *VulnerabilityValidation) UnmarshalJSON(bytes []byte) (err error) {
	varVulnerabilityValidation := _VulnerabilityValidation{}

	if err = json.Unmarshal(bytes, &varVulnerabilityValidation); err == nil {
		*o = VulnerabilityValidation(varVulnerabilityValidation)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "executedOn")
		delete(additionalProperties, "product")
		delete(additionalProperties, "message")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVulnerabilityValidation struct {
	value *VulnerabilityValidation
	isSet bool
}

func (v NullableVulnerabilityValidation) Get() *VulnerabilityValidation {
	return v.value
}

func (v *NullableVulnerabilityValidation) Set(val *VulnerabilityValidation) {
	v.value = val
	v.isSet = true
}

func (v NullableVulnerabilityValidation) IsSet() bool {
	return v.isSet
}

func (v *NullableVulnerabilityValidation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVulnerabilityValidation(val *VulnerabilityValidation) *NullableVulnerabilityValidation {
	return &NullableVulnerabilityValidation{value: val, isSet: true}
}

func (v NullableVulnerabilityValidation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVulnerabilityValidation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


