/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// IncidentConfig struct for IncidentConfig
type IncidentConfig struct {
	ClientId string `json:"clientId"`
	ClientSecret string `json:"clientSecret"`
	CriticalEvent *bool `json:"criticalEvent,omitempty"`
	Domain string `json:"domain"`
	Password string `json:"password"`
	UserName string `json:"userName"`
	Proxy NullableString `json:"proxy,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IncidentConfig IncidentConfig

// NewIncidentConfig instantiates a new IncidentConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncidentConfig(clientId string, clientSecret string, domain string, password string, userName string) *IncidentConfig {
	this := IncidentConfig{}
	this.ClientId = clientId
	this.ClientSecret = clientSecret
	this.Domain = domain
	this.Password = password
	this.UserName = userName
	return &this
}

// NewIncidentConfigWithDefaults instantiates a new IncidentConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncidentConfigWithDefaults() *IncidentConfig {
	this := IncidentConfig{}
	return &this
}

// GetClientId returns the ClientId field value
func (o *IncidentConfig) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *IncidentConfig) GetClientIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *IncidentConfig) SetClientId(v string) {
	o.ClientId = v
}

// GetClientSecret returns the ClientSecret field value
func (o *IncidentConfig) GetClientSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value
// and a boolean to check if the value has been set.
func (o *IncidentConfig) GetClientSecretOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClientSecret, true
}

// SetClientSecret sets field value
func (o *IncidentConfig) SetClientSecret(v string) {
	o.ClientSecret = v
}

// GetCriticalEvent returns the CriticalEvent field value if set, zero value otherwise.
func (o *IncidentConfig) GetCriticalEvent() bool {
	if o == nil || o.CriticalEvent == nil {
		var ret bool
		return ret
	}
	return *o.CriticalEvent
}

// GetCriticalEventOk returns a tuple with the CriticalEvent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentConfig) GetCriticalEventOk() (*bool, bool) {
	if o == nil || o.CriticalEvent == nil {
		return nil, false
	}
	return o.CriticalEvent, true
}

// HasCriticalEvent returns a boolean if a field has been set.
func (o *IncidentConfig) HasCriticalEvent() bool {
	if o != nil && o.CriticalEvent != nil {
		return true
	}

	return false
}

// SetCriticalEvent gets a reference to the given bool and assigns it to the CriticalEvent field.
func (o *IncidentConfig) SetCriticalEvent(v bool) {
	o.CriticalEvent = &v
}

// GetDomain returns the Domain field value
func (o *IncidentConfig) GetDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
func (o *IncidentConfig) GetDomainOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Domain, true
}

// SetDomain sets field value
func (o *IncidentConfig) SetDomain(v string) {
	o.Domain = v
}

// GetPassword returns the Password field value
func (o *IncidentConfig) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *IncidentConfig) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *IncidentConfig) SetPassword(v string) {
	o.Password = v
}

// GetUserName returns the UserName field value
func (o *IncidentConfig) GetUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value
// and a boolean to check if the value has been set.
func (o *IncidentConfig) GetUserNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UserName, true
}

// SetUserName sets field value
func (o *IncidentConfig) SetUserName(v string) {
	o.UserName = v
}

// GetProxy returns the Proxy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IncidentConfig) GetProxy() string {
	if o == nil || o.Proxy.Get() == nil {
		var ret string
		return ret
	}
	return *o.Proxy.Get()
}

// GetProxyOk returns a tuple with the Proxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IncidentConfig) GetProxyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Proxy.Get(), o.Proxy.IsSet()
}

// HasProxy returns a boolean if a field has been set.
func (o *IncidentConfig) HasProxy() bool {
	if o != nil && o.Proxy.IsSet() {
		return true
	}

	return false
}

// SetProxy gets a reference to the given NullableString and assigns it to the Proxy field.
func (o *IncidentConfig) SetProxy(v string) {
	o.Proxy.Set(&v)
}
// SetProxyNil sets the value for Proxy to be an explicit nil
func (o *IncidentConfig) SetProxyNil() {
	o.Proxy.Set(nil)
}

// UnsetProxy ensures that no value is present for Proxy, not even an explicit nil
func (o *IncidentConfig) UnsetProxy() {
	o.Proxy.Unset()
}

func (o IncidentConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["clientId"] = o.ClientId
	}
	if true {
		toSerialize["clientSecret"] = o.ClientSecret
	}
	if o.CriticalEvent != nil {
		toSerialize["criticalEvent"] = o.CriticalEvent
	}
	if true {
		toSerialize["domain"] = o.Domain
	}
	if true {
		toSerialize["password"] = o.Password
	}
	if true {
		toSerialize["userName"] = o.UserName
	}
	if o.Proxy.IsSet() {
		toSerialize["proxy"] = o.Proxy.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *IncidentConfig) UnmarshalJSON(bytes []byte) (err error) {
	varIncidentConfig := _IncidentConfig{}

	if err = json.Unmarshal(bytes, &varIncidentConfig); err == nil {
		*o = IncidentConfig(varIncidentConfig)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "clientId")
		delete(additionalProperties, "clientSecret")
		delete(additionalProperties, "criticalEvent")
		delete(additionalProperties, "domain")
		delete(additionalProperties, "password")
		delete(additionalProperties, "userName")
		delete(additionalProperties, "proxy")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIncidentConfig struct {
	value *IncidentConfig
	isSet bool
}

func (v NullableIncidentConfig) Get() *IncidentConfig {
	return v.value
}

func (v *NullableIncidentConfig) Set(val *IncidentConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableIncidentConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableIncidentConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncidentConfig(val *IncidentConfig) *NullableIncidentConfig {
	return &NullableIncidentConfig{value: val, isSet: true}
}

func (v NullableIncidentConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncidentConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


