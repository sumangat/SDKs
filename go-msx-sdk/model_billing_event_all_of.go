/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
	"time"
)

// BillingEventAllOf struct for BillingEventAllOf
type BillingEventAllOf struct {
	Id *string `json:"id,omitempty"`
	ModifiedOn *time.Time `json:"modifiedOn,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BillingEventAllOf BillingEventAllOf

// NewBillingEventAllOf instantiates a new BillingEventAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingEventAllOf() *BillingEventAllOf {
	this := BillingEventAllOf{}
	return &this
}

// NewBillingEventAllOfWithDefaults instantiates a new BillingEventAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingEventAllOfWithDefaults() *BillingEventAllOf {
	this := BillingEventAllOf{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BillingEventAllOf) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingEventAllOf) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BillingEventAllOf) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BillingEventAllOf) SetId(v string) {
	o.Id = &v
}

// GetModifiedOn returns the ModifiedOn field value if set, zero value otherwise.
func (o *BillingEventAllOf) GetModifiedOn() time.Time {
	if o == nil || o.ModifiedOn == nil {
		var ret time.Time
		return ret
	}
	return *o.ModifiedOn
}

// GetModifiedOnOk returns a tuple with the ModifiedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingEventAllOf) GetModifiedOnOk() (*time.Time, bool) {
	if o == nil || o.ModifiedOn == nil {
		return nil, false
	}
	return o.ModifiedOn, true
}

// HasModifiedOn returns a boolean if a field has been set.
func (o *BillingEventAllOf) HasModifiedOn() bool {
	if o != nil && o.ModifiedOn != nil {
		return true
	}

	return false
}

// SetModifiedOn gets a reference to the given time.Time and assigns it to the ModifiedOn field.
func (o *BillingEventAllOf) SetModifiedOn(v time.Time) {
	o.ModifiedOn = &v
}

func (o BillingEventAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ModifiedOn != nil {
		toSerialize["modifiedOn"] = o.ModifiedOn
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *BillingEventAllOf) UnmarshalJSON(bytes []byte) (err error) {
	varBillingEventAllOf := _BillingEventAllOf{}

	if err = json.Unmarshal(bytes, &varBillingEventAllOf); err == nil {
		*o = BillingEventAllOf(varBillingEventAllOf)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "modifiedOn")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBillingEventAllOf struct {
	value *BillingEventAllOf
	isSet bool
}

func (v NullableBillingEventAllOf) Get() *BillingEventAllOf {
	return v.value
}

func (v *NullableBillingEventAllOf) Set(val *BillingEventAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingEventAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingEventAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingEventAllOf(val *BillingEventAllOf) *NullableBillingEventAllOf {
	return &NullableBillingEventAllOf{value: val, isSet: true}
}

func (v NullableBillingEventAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingEventAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


