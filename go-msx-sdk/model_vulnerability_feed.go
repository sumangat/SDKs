/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// VulnerabilityFeed Details of an NVD advisory feed.
type VulnerabilityFeed struct {
	Name *string `json:"name,omitempty"`
	File *string `json:"file,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _VulnerabilityFeed VulnerabilityFeed

// NewVulnerabilityFeed instantiates a new VulnerabilityFeed object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVulnerabilityFeed() *VulnerabilityFeed {
	this := VulnerabilityFeed{}
	return &this
}

// NewVulnerabilityFeedWithDefaults instantiates a new VulnerabilityFeed object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVulnerabilityFeedWithDefaults() *VulnerabilityFeed {
	this := VulnerabilityFeed{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VulnerabilityFeed) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityFeed) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VulnerabilityFeed) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VulnerabilityFeed) SetName(v string) {
	o.Name = &v
}

// GetFile returns the File field value if set, zero value otherwise.
func (o *VulnerabilityFeed) GetFile() string {
	if o == nil || o.File == nil {
		var ret string
		return ret
	}
	return *o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityFeed) GetFileOk() (*string, bool) {
	if o == nil || o.File == nil {
		return nil, false
	}
	return o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *VulnerabilityFeed) HasFile() bool {
	if o != nil && o.File != nil {
		return true
	}

	return false
}

// SetFile gets a reference to the given string and assigns it to the File field.
func (o *VulnerabilityFeed) SetFile(v string) {
	o.File = &v
}

func (o VulnerabilityFeed) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.File != nil {
		toSerialize["file"] = o.File
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *VulnerabilityFeed) UnmarshalJSON(bytes []byte) (err error) {
	varVulnerabilityFeed := _VulnerabilityFeed{}

	if err = json.Unmarshal(bytes, &varVulnerabilityFeed); err == nil {
		*o = VulnerabilityFeed(varVulnerabilityFeed)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "file")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVulnerabilityFeed struct {
	value *VulnerabilityFeed
	isSet bool
}

func (v NullableVulnerabilityFeed) Get() *VulnerabilityFeed {
	return v.value
}

func (v *NullableVulnerabilityFeed) Set(val *VulnerabilityFeed) {
	v.value = val
	v.isSet = true
}

func (v NullableVulnerabilityFeed) IsSet() bool {
	return v.isSet
}

func (v *NullableVulnerabilityFeed) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVulnerabilityFeed(val *VulnerabilityFeed) *NullableVulnerabilityFeed {
	return &NullableVulnerabilityFeed{value: val, isSet: true}
}

func (v NullableVulnerabilityFeed) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVulnerabilityFeed) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


