/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// ChangeRequestAllOf struct for ChangeRequestAllOf
type ChangeRequestAllOf struct {
	Id *string `json:"id,omitempty"`
	ExternalId *string `json:"externalId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ChangeRequestAllOf ChangeRequestAllOf

// NewChangeRequestAllOf instantiates a new ChangeRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangeRequestAllOf() *ChangeRequestAllOf {
	this := ChangeRequestAllOf{}
	return &this
}

// NewChangeRequestAllOfWithDefaults instantiates a new ChangeRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangeRequestAllOfWithDefaults() *ChangeRequestAllOf {
	this := ChangeRequestAllOf{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ChangeRequestAllOf) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeRequestAllOf) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ChangeRequestAllOf) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ChangeRequestAllOf) SetId(v string) {
	o.Id = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *ChangeRequestAllOf) GetExternalId() string {
	if o == nil || o.ExternalId == nil {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeRequestAllOf) GetExternalIdOk() (*string, bool) {
	if o == nil || o.ExternalId == nil {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *ChangeRequestAllOf) HasExternalId() bool {
	if o != nil && o.ExternalId != nil {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *ChangeRequestAllOf) SetExternalId(v string) {
	o.ExternalId = &v
}

func (o ChangeRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ExternalId != nil {
		toSerialize["externalId"] = o.ExternalId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ChangeRequestAllOf) UnmarshalJSON(bytes []byte) (err error) {
	varChangeRequestAllOf := _ChangeRequestAllOf{}

	if err = json.Unmarshal(bytes, &varChangeRequestAllOf); err == nil {
		*o = ChangeRequestAllOf(varChangeRequestAllOf)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "externalId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableChangeRequestAllOf struct {
	value *ChangeRequestAllOf
	isSet bool
}

func (v NullableChangeRequestAllOf) Get() *ChangeRequestAllOf {
	return v.value
}

func (v *NullableChangeRequestAllOf) Set(val *ChangeRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableChangeRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableChangeRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangeRequestAllOf(val *ChangeRequestAllOf) *NullableChangeRequestAllOf {
	return &NullableChangeRequestAllOf{value: val, isSet: true}
}

func (v NullableChangeRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangeRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


