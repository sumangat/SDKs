/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// LegacyServiceOrderDetail struct for LegacyServiceOrderDetail
type LegacyServiceOrderDetail struct {
	Service *map[string]string `json:"service,omitempty"`
	Tenant *map[string]string `json:"tenant,omitempty"`
	User *map[string]string `json:"user,omitempty"`
	Provider *map[string]string `json:"provider,omitempty"`
	Offer *map[string]string `json:"offer,omitempty"`
	Cost *map[string]string `json:"cost,omitempty"`
	SubscriptionId *string `json:"subscriptionId,omitempty"`
	SubscriptionName *string `json:"subscriptionName,omitempty"`
	SubscriptionDetail *LegacySubscriptionDetail `json:"subscriptionDetail,omitempty"`
	ServiceDowngrade *map[string]interface{} `json:"serviceDowngrade,omitempty"`
	NsoResponseTypes *LegacyNsoResponseTypes `json:"nsoResponseTypes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LegacyServiceOrderDetail LegacyServiceOrderDetail

// NewLegacyServiceOrderDetail instantiates a new LegacyServiceOrderDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLegacyServiceOrderDetail() *LegacyServiceOrderDetail {
	this := LegacyServiceOrderDetail{}
	return &this
}

// NewLegacyServiceOrderDetailWithDefaults instantiates a new LegacyServiceOrderDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLegacyServiceOrderDetailWithDefaults() *LegacyServiceOrderDetail {
	this := LegacyServiceOrderDetail{}
	return &this
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *LegacyServiceOrderDetail) GetService() map[string]string {
	if o == nil || o.Service == nil {
		var ret map[string]string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrderDetail) GetServiceOk() (*map[string]string, bool) {
	if o == nil || o.Service == nil {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *LegacyServiceOrderDetail) HasService() bool {
	if o != nil && o.Service != nil {
		return true
	}

	return false
}

// SetService gets a reference to the given map[string]string and assigns it to the Service field.
func (o *LegacyServiceOrderDetail) SetService(v map[string]string) {
	o.Service = &v
}

// GetTenant returns the Tenant field value if set, zero value otherwise.
func (o *LegacyServiceOrderDetail) GetTenant() map[string]string {
	if o == nil || o.Tenant == nil {
		var ret map[string]string
		return ret
	}
	return *o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrderDetail) GetTenantOk() (*map[string]string, bool) {
	if o == nil || o.Tenant == nil {
		return nil, false
	}
	return o.Tenant, true
}

// HasTenant returns a boolean if a field has been set.
func (o *LegacyServiceOrderDetail) HasTenant() bool {
	if o != nil && o.Tenant != nil {
		return true
	}

	return false
}

// SetTenant gets a reference to the given map[string]string and assigns it to the Tenant field.
func (o *LegacyServiceOrderDetail) SetTenant(v map[string]string) {
	o.Tenant = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *LegacyServiceOrderDetail) GetUser() map[string]string {
	if o == nil || o.User == nil {
		var ret map[string]string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrderDetail) GetUserOk() (*map[string]string, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *LegacyServiceOrderDetail) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given map[string]string and assigns it to the User field.
func (o *LegacyServiceOrderDetail) SetUser(v map[string]string) {
	o.User = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *LegacyServiceOrderDetail) GetProvider() map[string]string {
	if o == nil || o.Provider == nil {
		var ret map[string]string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrderDetail) GetProviderOk() (*map[string]string, bool) {
	if o == nil || o.Provider == nil {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *LegacyServiceOrderDetail) HasProvider() bool {
	if o != nil && o.Provider != nil {
		return true
	}

	return false
}

// SetProvider gets a reference to the given map[string]string and assigns it to the Provider field.
func (o *LegacyServiceOrderDetail) SetProvider(v map[string]string) {
	o.Provider = &v
}

// GetOffer returns the Offer field value if set, zero value otherwise.
func (o *LegacyServiceOrderDetail) GetOffer() map[string]string {
	if o == nil || o.Offer == nil {
		var ret map[string]string
		return ret
	}
	return *o.Offer
}

// GetOfferOk returns a tuple with the Offer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrderDetail) GetOfferOk() (*map[string]string, bool) {
	if o == nil || o.Offer == nil {
		return nil, false
	}
	return o.Offer, true
}

// HasOffer returns a boolean if a field has been set.
func (o *LegacyServiceOrderDetail) HasOffer() bool {
	if o != nil && o.Offer != nil {
		return true
	}

	return false
}

// SetOffer gets a reference to the given map[string]string and assigns it to the Offer field.
func (o *LegacyServiceOrderDetail) SetOffer(v map[string]string) {
	o.Offer = &v
}

// GetCost returns the Cost field value if set, zero value otherwise.
func (o *LegacyServiceOrderDetail) GetCost() map[string]string {
	if o == nil || o.Cost == nil {
		var ret map[string]string
		return ret
	}
	return *o.Cost
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrderDetail) GetCostOk() (*map[string]string, bool) {
	if o == nil || o.Cost == nil {
		return nil, false
	}
	return o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *LegacyServiceOrderDetail) HasCost() bool {
	if o != nil && o.Cost != nil {
		return true
	}

	return false
}

// SetCost gets a reference to the given map[string]string and assigns it to the Cost field.
func (o *LegacyServiceOrderDetail) SetCost(v map[string]string) {
	o.Cost = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *LegacyServiceOrderDetail) GetSubscriptionId() string {
	if o == nil || o.SubscriptionId == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrderDetail) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || o.SubscriptionId == nil {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *LegacyServiceOrderDetail) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId != nil {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *LegacyServiceOrderDetail) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetSubscriptionName returns the SubscriptionName field value if set, zero value otherwise.
func (o *LegacyServiceOrderDetail) GetSubscriptionName() string {
	if o == nil || o.SubscriptionName == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionName
}

// GetSubscriptionNameOk returns a tuple with the SubscriptionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrderDetail) GetSubscriptionNameOk() (*string, bool) {
	if o == nil || o.SubscriptionName == nil {
		return nil, false
	}
	return o.SubscriptionName, true
}

// HasSubscriptionName returns a boolean if a field has been set.
func (o *LegacyServiceOrderDetail) HasSubscriptionName() bool {
	if o != nil && o.SubscriptionName != nil {
		return true
	}

	return false
}

// SetSubscriptionName gets a reference to the given string and assigns it to the SubscriptionName field.
func (o *LegacyServiceOrderDetail) SetSubscriptionName(v string) {
	o.SubscriptionName = &v
}

// GetSubscriptionDetail returns the SubscriptionDetail field value if set, zero value otherwise.
func (o *LegacyServiceOrderDetail) GetSubscriptionDetail() LegacySubscriptionDetail {
	if o == nil || o.SubscriptionDetail == nil {
		var ret LegacySubscriptionDetail
		return ret
	}
	return *o.SubscriptionDetail
}

// GetSubscriptionDetailOk returns a tuple with the SubscriptionDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrderDetail) GetSubscriptionDetailOk() (*LegacySubscriptionDetail, bool) {
	if o == nil || o.SubscriptionDetail == nil {
		return nil, false
	}
	return o.SubscriptionDetail, true
}

// HasSubscriptionDetail returns a boolean if a field has been set.
func (o *LegacyServiceOrderDetail) HasSubscriptionDetail() bool {
	if o != nil && o.SubscriptionDetail != nil {
		return true
	}

	return false
}

// SetSubscriptionDetail gets a reference to the given LegacySubscriptionDetail and assigns it to the SubscriptionDetail field.
func (o *LegacyServiceOrderDetail) SetSubscriptionDetail(v LegacySubscriptionDetail) {
	o.SubscriptionDetail = &v
}

// GetServiceDowngrade returns the ServiceDowngrade field value if set, zero value otherwise.
func (o *LegacyServiceOrderDetail) GetServiceDowngrade() map[string]interface{} {
	if o == nil || o.ServiceDowngrade == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.ServiceDowngrade
}

// GetServiceDowngradeOk returns a tuple with the ServiceDowngrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrderDetail) GetServiceDowngradeOk() (*map[string]interface{}, bool) {
	if o == nil || o.ServiceDowngrade == nil {
		return nil, false
	}
	return o.ServiceDowngrade, true
}

// HasServiceDowngrade returns a boolean if a field has been set.
func (o *LegacyServiceOrderDetail) HasServiceDowngrade() bool {
	if o != nil && o.ServiceDowngrade != nil {
		return true
	}

	return false
}

// SetServiceDowngrade gets a reference to the given map[string]interface{} and assigns it to the ServiceDowngrade field.
func (o *LegacyServiceOrderDetail) SetServiceDowngrade(v map[string]interface{}) {
	o.ServiceDowngrade = &v
}

// GetNsoResponseTypes returns the NsoResponseTypes field value if set, zero value otherwise.
func (o *LegacyServiceOrderDetail) GetNsoResponseTypes() LegacyNsoResponseTypes {
	if o == nil || o.NsoResponseTypes == nil {
		var ret LegacyNsoResponseTypes
		return ret
	}
	return *o.NsoResponseTypes
}

// GetNsoResponseTypesOk returns a tuple with the NsoResponseTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrderDetail) GetNsoResponseTypesOk() (*LegacyNsoResponseTypes, bool) {
	if o == nil || o.NsoResponseTypes == nil {
		return nil, false
	}
	return o.NsoResponseTypes, true
}

// HasNsoResponseTypes returns a boolean if a field has been set.
func (o *LegacyServiceOrderDetail) HasNsoResponseTypes() bool {
	if o != nil && o.NsoResponseTypes != nil {
		return true
	}

	return false
}

// SetNsoResponseTypes gets a reference to the given LegacyNsoResponseTypes and assigns it to the NsoResponseTypes field.
func (o *LegacyServiceOrderDetail) SetNsoResponseTypes(v LegacyNsoResponseTypes) {
	o.NsoResponseTypes = &v
}

func (o LegacyServiceOrderDetail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Service != nil {
		toSerialize["service"] = o.Service
	}
	if o.Tenant != nil {
		toSerialize["tenant"] = o.Tenant
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	if o.Provider != nil {
		toSerialize["provider"] = o.Provider
	}
	if o.Offer != nil {
		toSerialize["offer"] = o.Offer
	}
	if o.Cost != nil {
		toSerialize["cost"] = o.Cost
	}
	if o.SubscriptionId != nil {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if o.SubscriptionName != nil {
		toSerialize["subscriptionName"] = o.SubscriptionName
	}
	if o.SubscriptionDetail != nil {
		toSerialize["subscriptionDetail"] = o.SubscriptionDetail
	}
	if o.ServiceDowngrade != nil {
		toSerialize["serviceDowngrade"] = o.ServiceDowngrade
	}
	if o.NsoResponseTypes != nil {
		toSerialize["nsoResponseTypes"] = o.NsoResponseTypes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *LegacyServiceOrderDetail) UnmarshalJSON(bytes []byte) (err error) {
	varLegacyServiceOrderDetail := _LegacyServiceOrderDetail{}

	if err = json.Unmarshal(bytes, &varLegacyServiceOrderDetail); err == nil {
		*o = LegacyServiceOrderDetail(varLegacyServiceOrderDetail)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "service")
		delete(additionalProperties, "tenant")
		delete(additionalProperties, "user")
		delete(additionalProperties, "provider")
		delete(additionalProperties, "offer")
		delete(additionalProperties, "cost")
		delete(additionalProperties, "subscriptionId")
		delete(additionalProperties, "subscriptionName")
		delete(additionalProperties, "subscriptionDetail")
		delete(additionalProperties, "serviceDowngrade")
		delete(additionalProperties, "nsoResponseTypes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLegacyServiceOrderDetail struct {
	value *LegacyServiceOrderDetail
	isSet bool
}

func (v NullableLegacyServiceOrderDetail) Get() *LegacyServiceOrderDetail {
	return v.value
}

func (v *NullableLegacyServiceOrderDetail) Set(val *LegacyServiceOrderDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableLegacyServiceOrderDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableLegacyServiceOrderDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLegacyServiceOrderDetail(val *LegacyServiceOrderDetail) *NullableLegacyServiceOrderDetail {
	return &NullableLegacyServiceOrderDetail{value: val, isSet: true}
}

func (v NullableLegacyServiceOrderDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLegacyServiceOrderDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


