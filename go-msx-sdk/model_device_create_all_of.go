/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// DeviceCreateAllOf struct for DeviceCreateAllOf
type DeviceCreateAllOf struct {
	ServiceInstanceId NullableString `json:"serviceInstanceId,omitempty"`
	SubscriptionId NullableString `json:"subscriptionId,omitempty"`
	TenantId string `json:"tenantId"`
	AdditionalProperties map[string]interface{}
}

type _DeviceCreateAllOf DeviceCreateAllOf

// NewDeviceCreateAllOf instantiates a new DeviceCreateAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceCreateAllOf(tenantId string) *DeviceCreateAllOf {
	this := DeviceCreateAllOf{}
	this.TenantId = tenantId
	return &this
}

// NewDeviceCreateAllOfWithDefaults instantiates a new DeviceCreateAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceCreateAllOfWithDefaults() *DeviceCreateAllOf {
	this := DeviceCreateAllOf{}
	return &this
}

// GetServiceInstanceId returns the ServiceInstanceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceCreateAllOf) GetServiceInstanceId() string {
	if o == nil || o.ServiceInstanceId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServiceInstanceId.Get()
}

// GetServiceInstanceIdOk returns a tuple with the ServiceInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceCreateAllOf) GetServiceInstanceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServiceInstanceId.Get(), o.ServiceInstanceId.IsSet()
}

// HasServiceInstanceId returns a boolean if a field has been set.
func (o *DeviceCreateAllOf) HasServiceInstanceId() bool {
	if o != nil && o.ServiceInstanceId.IsSet() {
		return true
	}

	return false
}

// SetServiceInstanceId gets a reference to the given NullableString and assigns it to the ServiceInstanceId field.
func (o *DeviceCreateAllOf) SetServiceInstanceId(v string) {
	o.ServiceInstanceId.Set(&v)
}
// SetServiceInstanceIdNil sets the value for ServiceInstanceId to be an explicit nil
func (o *DeviceCreateAllOf) SetServiceInstanceIdNil() {
	o.ServiceInstanceId.Set(nil)
}

// UnsetServiceInstanceId ensures that no value is present for ServiceInstanceId, not even an explicit nil
func (o *DeviceCreateAllOf) UnsetServiceInstanceId() {
	o.ServiceInstanceId.Unset()
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeviceCreateAllOf) GetSubscriptionId() string {
	if o == nil || o.SubscriptionId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionId.Get()
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeviceCreateAllOf) GetSubscriptionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SubscriptionId.Get(), o.SubscriptionId.IsSet()
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *DeviceCreateAllOf) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId.IsSet() {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given NullableString and assigns it to the SubscriptionId field.
func (o *DeviceCreateAllOf) SetSubscriptionId(v string) {
	o.SubscriptionId.Set(&v)
}
// SetSubscriptionIdNil sets the value for SubscriptionId to be an explicit nil
func (o *DeviceCreateAllOf) SetSubscriptionIdNil() {
	o.SubscriptionId.Set(nil)
}

// UnsetSubscriptionId ensures that no value is present for SubscriptionId, not even an explicit nil
func (o *DeviceCreateAllOf) UnsetSubscriptionId() {
	o.SubscriptionId.Unset()
}

// GetTenantId returns the TenantId field value
func (o *DeviceCreateAllOf) GetTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *DeviceCreateAllOf) GetTenantIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *DeviceCreateAllOf) SetTenantId(v string) {
	o.TenantId = v
}

func (o DeviceCreateAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ServiceInstanceId.IsSet() {
		toSerialize["serviceInstanceId"] = o.ServiceInstanceId.Get()
	}
	if o.SubscriptionId.IsSet() {
		toSerialize["subscriptionId"] = o.SubscriptionId.Get()
	}
	if true {
		toSerialize["tenantId"] = o.TenantId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *DeviceCreateAllOf) UnmarshalJSON(bytes []byte) (err error) {
	varDeviceCreateAllOf := _DeviceCreateAllOf{}

	if err = json.Unmarshal(bytes, &varDeviceCreateAllOf); err == nil {
		*o = DeviceCreateAllOf(varDeviceCreateAllOf)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "serviceInstanceId")
		delete(additionalProperties, "subscriptionId")
		delete(additionalProperties, "tenantId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDeviceCreateAllOf struct {
	value *DeviceCreateAllOf
	isSet bool
}

func (v NullableDeviceCreateAllOf) Get() *DeviceCreateAllOf {
	return v.value
}

func (v *NullableDeviceCreateAllOf) Set(val *DeviceCreateAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceCreateAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceCreateAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceCreateAllOf(val *DeviceCreateAllOf) *NullableDeviceCreateAllOf {
	return &NullableDeviceCreateAllOf{value: val, isSet: true}
}

func (v NullableDeviceCreateAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceCreateAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


