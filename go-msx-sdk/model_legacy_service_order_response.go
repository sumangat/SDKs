/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// LegacyServiceOrderResponse struct for LegacyServiceOrderResponse
type LegacyServiceOrderResponse struct {
	Message *string `json:"message,omitempty"`
	TransactionUUID *string `json:"transactionUUID,omitempty"`
	SubscriptionId *string `json:"subscriptionId,omitempty"`
	Url *string `json:"url,omitempty"`
	Status *string `json:"status,omitempty"`
	ServiceInstanceIds *[]string `json:"serviceInstanceIds,omitempty"`
	Sites *[]map[string]interface{} `json:"sites,omitempty"`
	Devices *[]map[string]interface{} `json:"devices,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LegacyServiceOrderResponse LegacyServiceOrderResponse

// NewLegacyServiceOrderResponse instantiates a new LegacyServiceOrderResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLegacyServiceOrderResponse() *LegacyServiceOrderResponse {
	this := LegacyServiceOrderResponse{}
	return &this
}

// NewLegacyServiceOrderResponseWithDefaults instantiates a new LegacyServiceOrderResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLegacyServiceOrderResponseWithDefaults() *LegacyServiceOrderResponse {
	this := LegacyServiceOrderResponse{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *LegacyServiceOrderResponse) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrderResponse) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *LegacyServiceOrderResponse) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *LegacyServiceOrderResponse) SetMessage(v string) {
	o.Message = &v
}

// GetTransactionUUID returns the TransactionUUID field value if set, zero value otherwise.
func (o *LegacyServiceOrderResponse) GetTransactionUUID() string {
	if o == nil || o.TransactionUUID == nil {
		var ret string
		return ret
	}
	return *o.TransactionUUID
}

// GetTransactionUUIDOk returns a tuple with the TransactionUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrderResponse) GetTransactionUUIDOk() (*string, bool) {
	if o == nil || o.TransactionUUID == nil {
		return nil, false
	}
	return o.TransactionUUID, true
}

// HasTransactionUUID returns a boolean if a field has been set.
func (o *LegacyServiceOrderResponse) HasTransactionUUID() bool {
	if o != nil && o.TransactionUUID != nil {
		return true
	}

	return false
}

// SetTransactionUUID gets a reference to the given string and assigns it to the TransactionUUID field.
func (o *LegacyServiceOrderResponse) SetTransactionUUID(v string) {
	o.TransactionUUID = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *LegacyServiceOrderResponse) GetSubscriptionId() string {
	if o == nil || o.SubscriptionId == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrderResponse) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || o.SubscriptionId == nil {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *LegacyServiceOrderResponse) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId != nil {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *LegacyServiceOrderResponse) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *LegacyServiceOrderResponse) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrderResponse) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *LegacyServiceOrderResponse) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *LegacyServiceOrderResponse) SetUrl(v string) {
	o.Url = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *LegacyServiceOrderResponse) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrderResponse) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *LegacyServiceOrderResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *LegacyServiceOrderResponse) SetStatus(v string) {
	o.Status = &v
}

// GetServiceInstanceIds returns the ServiceInstanceIds field value if set, zero value otherwise.
func (o *LegacyServiceOrderResponse) GetServiceInstanceIds() []string {
	if o == nil || o.ServiceInstanceIds == nil {
		var ret []string
		return ret
	}
	return *o.ServiceInstanceIds
}

// GetServiceInstanceIdsOk returns a tuple with the ServiceInstanceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrderResponse) GetServiceInstanceIdsOk() (*[]string, bool) {
	if o == nil || o.ServiceInstanceIds == nil {
		return nil, false
	}
	return o.ServiceInstanceIds, true
}

// HasServiceInstanceIds returns a boolean if a field has been set.
func (o *LegacyServiceOrderResponse) HasServiceInstanceIds() bool {
	if o != nil && o.ServiceInstanceIds != nil {
		return true
	}

	return false
}

// SetServiceInstanceIds gets a reference to the given []string and assigns it to the ServiceInstanceIds field.
func (o *LegacyServiceOrderResponse) SetServiceInstanceIds(v []string) {
	o.ServiceInstanceIds = &v
}

// GetSites returns the Sites field value if set, zero value otherwise.
func (o *LegacyServiceOrderResponse) GetSites() []map[string]interface{} {
	if o == nil || o.Sites == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Sites
}

// GetSitesOk returns a tuple with the Sites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrderResponse) GetSitesOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Sites == nil {
		return nil, false
	}
	return o.Sites, true
}

// HasSites returns a boolean if a field has been set.
func (o *LegacyServiceOrderResponse) HasSites() bool {
	if o != nil && o.Sites != nil {
		return true
	}

	return false
}

// SetSites gets a reference to the given []map[string]interface{} and assigns it to the Sites field.
func (o *LegacyServiceOrderResponse) SetSites(v []map[string]interface{}) {
	o.Sites = &v
}

// GetDevices returns the Devices field value if set, zero value otherwise.
func (o *LegacyServiceOrderResponse) GetDevices() []map[string]interface{} {
	if o == nil || o.Devices == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Devices
}

// GetDevicesOk returns a tuple with the Devices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrderResponse) GetDevicesOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Devices == nil {
		return nil, false
	}
	return o.Devices, true
}

// HasDevices returns a boolean if a field has been set.
func (o *LegacyServiceOrderResponse) HasDevices() bool {
	if o != nil && o.Devices != nil {
		return true
	}

	return false
}

// SetDevices gets a reference to the given []map[string]interface{} and assigns it to the Devices field.
func (o *LegacyServiceOrderResponse) SetDevices(v []map[string]interface{}) {
	o.Devices = &v
}

func (o LegacyServiceOrderResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.TransactionUUID != nil {
		toSerialize["transactionUUID"] = o.TransactionUUID
	}
	if o.SubscriptionId != nil {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.ServiceInstanceIds != nil {
		toSerialize["serviceInstanceIds"] = o.ServiceInstanceIds
	}
	if o.Sites != nil {
		toSerialize["sites"] = o.Sites
	}
	if o.Devices != nil {
		toSerialize["devices"] = o.Devices
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *LegacyServiceOrderResponse) UnmarshalJSON(bytes []byte) (err error) {
	varLegacyServiceOrderResponse := _LegacyServiceOrderResponse{}

	if err = json.Unmarshal(bytes, &varLegacyServiceOrderResponse); err == nil {
		*o = LegacyServiceOrderResponse(varLegacyServiceOrderResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "message")
		delete(additionalProperties, "transactionUUID")
		delete(additionalProperties, "subscriptionId")
		delete(additionalProperties, "url")
		delete(additionalProperties, "status")
		delete(additionalProperties, "serviceInstanceIds")
		delete(additionalProperties, "sites")
		delete(additionalProperties, "devices")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLegacyServiceOrderResponse struct {
	value *LegacyServiceOrderResponse
	isSet bool
}

func (v NullableLegacyServiceOrderResponse) Get() *LegacyServiceOrderResponse {
	return v.value
}

func (v *NullableLegacyServiceOrderResponse) Set(val *LegacyServiceOrderResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLegacyServiceOrderResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLegacyServiceOrderResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLegacyServiceOrderResponse(val *LegacyServiceOrderResponse) *NullableLegacyServiceOrderResponse {
	return &NullableLegacyServiceOrderResponse{value: val, isSet: true}
}

func (v NullableLegacyServiceOrderResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLegacyServiceOrderResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


