/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// UserCreateAllOf struct for UserCreateAllOf
type UserCreateAllOf struct {
	Username *string `json:"username,omitempty"`
	Password NullableString `json:"password,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UserCreateAllOf UserCreateAllOf

// NewUserCreateAllOf instantiates a new UserCreateAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserCreateAllOf() *UserCreateAllOf {
	this := UserCreateAllOf{}
	return &this
}

// NewUserCreateAllOfWithDefaults instantiates a new UserCreateAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserCreateAllOfWithDefaults() *UserCreateAllOf {
	this := UserCreateAllOf{}
	return &this
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *UserCreateAllOf) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreateAllOf) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *UserCreateAllOf) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *UserCreateAllOf) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UserCreateAllOf) GetPassword() string {
	if o == nil || o.Password.Get() == nil {
		var ret string
		return ret
	}
	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserCreateAllOf) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// HasPassword returns a boolean if a field has been set.
func (o *UserCreateAllOf) HasPassword() bool {
	if o != nil && o.Password.IsSet() {
		return true
	}

	return false
}

// SetPassword gets a reference to the given NullableString and assigns it to the Password field.
func (o *UserCreateAllOf) SetPassword(v string) {
	o.Password.Set(&v)
}
// SetPasswordNil sets the value for Password to be an explicit nil
func (o *UserCreateAllOf) SetPasswordNil() {
	o.Password.Set(nil)
}

// UnsetPassword ensures that no value is present for Password, not even an explicit nil
func (o *UserCreateAllOf) UnsetPassword() {
	o.Password.Unset()
}

func (o UserCreateAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	if o.Password.IsSet() {
		toSerialize["password"] = o.Password.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *UserCreateAllOf) UnmarshalJSON(bytes []byte) (err error) {
	varUserCreateAllOf := _UserCreateAllOf{}

	if err = json.Unmarshal(bytes, &varUserCreateAllOf); err == nil {
		*o = UserCreateAllOf(varUserCreateAllOf)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "username")
		delete(additionalProperties, "password")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUserCreateAllOf struct {
	value *UserCreateAllOf
	isSet bool
}

func (v NullableUserCreateAllOf) Get() *UserCreateAllOf {
	return v.value
}

func (v *NullableUserCreateAllOf) Set(val *UserCreateAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableUserCreateAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableUserCreateAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserCreateAllOf(val *UserCreateAllOf) *NullableUserCreateAllOf {
	return &NullableUserCreateAllOf{value: val, isSet: true}
}

func (v NullableUserCreateAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserCreateAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


