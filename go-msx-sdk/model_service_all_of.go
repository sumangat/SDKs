/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
	"time"
)

// ServiceAllOf struct for ServiceAllOf
type ServiceAllOf struct {
	Id *string `json:"id,omitempty"`
	ProviderId *string `json:"providerId,omitempty"`
	TenantId *string `json:"tenantId,omitempty"`
	UserId *string `json:"userId,omitempty"`
	SubscriptionId *string `json:"subscriptionId,omitempty"`
	CreatedOn *time.Time `json:"createdOn,omitempty"`
	ModifiedOn NullableTime `json:"modifiedOn,omitempty"`
	ProvisionedOn *time.Time `json:"provisionedOn,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServiceAllOf ServiceAllOf

// NewServiceAllOf instantiates a new ServiceAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceAllOf() *ServiceAllOf {
	this := ServiceAllOf{}
	return &this
}

// NewServiceAllOfWithDefaults instantiates a new ServiceAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceAllOfWithDefaults() *ServiceAllOf {
	this := ServiceAllOf{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceAllOf) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAllOf) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceAllOf) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ServiceAllOf) SetId(v string) {
	o.Id = &v
}

// GetProviderId returns the ProviderId field value if set, zero value otherwise.
func (o *ServiceAllOf) GetProviderId() string {
	if o == nil || o.ProviderId == nil {
		var ret string
		return ret
	}
	return *o.ProviderId
}

// GetProviderIdOk returns a tuple with the ProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAllOf) GetProviderIdOk() (*string, bool) {
	if o == nil || o.ProviderId == nil {
		return nil, false
	}
	return o.ProviderId, true
}

// HasProviderId returns a boolean if a field has been set.
func (o *ServiceAllOf) HasProviderId() bool {
	if o != nil && o.ProviderId != nil {
		return true
	}

	return false
}

// SetProviderId gets a reference to the given string and assigns it to the ProviderId field.
func (o *ServiceAllOf) SetProviderId(v string) {
	o.ProviderId = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *ServiceAllOf) GetTenantId() string {
	if o == nil || o.TenantId == nil {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAllOf) GetTenantIdOk() (*string, bool) {
	if o == nil || o.TenantId == nil {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *ServiceAllOf) HasTenantId() bool {
	if o != nil && o.TenantId != nil {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *ServiceAllOf) SetTenantId(v string) {
	o.TenantId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ServiceAllOf) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAllOf) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ServiceAllOf) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *ServiceAllOf) SetUserId(v string) {
	o.UserId = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *ServiceAllOf) GetSubscriptionId() string {
	if o == nil || o.SubscriptionId == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAllOf) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || o.SubscriptionId == nil {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *ServiceAllOf) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId != nil {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *ServiceAllOf) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *ServiceAllOf) GetCreatedOn() time.Time {
	if o == nil || o.CreatedOn == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAllOf) GetCreatedOnOk() (*time.Time, bool) {
	if o == nil || o.CreatedOn == nil {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *ServiceAllOf) HasCreatedOn() bool {
	if o != nil && o.CreatedOn != nil {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given time.Time and assigns it to the CreatedOn field.
func (o *ServiceAllOf) SetCreatedOn(v time.Time) {
	o.CreatedOn = &v
}

// GetModifiedOn returns the ModifiedOn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceAllOf) GetModifiedOn() time.Time {
	if o == nil || o.ModifiedOn.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.ModifiedOn.Get()
}

// GetModifiedOnOk returns a tuple with the ModifiedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceAllOf) GetModifiedOnOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ModifiedOn.Get(), o.ModifiedOn.IsSet()
}

// HasModifiedOn returns a boolean if a field has been set.
func (o *ServiceAllOf) HasModifiedOn() bool {
	if o != nil && o.ModifiedOn.IsSet() {
		return true
	}

	return false
}

// SetModifiedOn gets a reference to the given NullableTime and assigns it to the ModifiedOn field.
func (o *ServiceAllOf) SetModifiedOn(v time.Time) {
	o.ModifiedOn.Set(&v)
}
// SetModifiedOnNil sets the value for ModifiedOn to be an explicit nil
func (o *ServiceAllOf) SetModifiedOnNil() {
	o.ModifiedOn.Set(nil)
}

// UnsetModifiedOn ensures that no value is present for ModifiedOn, not even an explicit nil
func (o *ServiceAllOf) UnsetModifiedOn() {
	o.ModifiedOn.Unset()
}

// GetProvisionedOn returns the ProvisionedOn field value if set, zero value otherwise.
func (o *ServiceAllOf) GetProvisionedOn() time.Time {
	if o == nil || o.ProvisionedOn == nil {
		var ret time.Time
		return ret
	}
	return *o.ProvisionedOn
}

// GetProvisionedOnOk returns a tuple with the ProvisionedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAllOf) GetProvisionedOnOk() (*time.Time, bool) {
	if o == nil || o.ProvisionedOn == nil {
		return nil, false
	}
	return o.ProvisionedOn, true
}

// HasProvisionedOn returns a boolean if a field has been set.
func (o *ServiceAllOf) HasProvisionedOn() bool {
	if o != nil && o.ProvisionedOn != nil {
		return true
	}

	return false
}

// SetProvisionedOn gets a reference to the given time.Time and assigns it to the ProvisionedOn field.
func (o *ServiceAllOf) SetProvisionedOn(v time.Time) {
	o.ProvisionedOn = &v
}

func (o ServiceAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ProviderId != nil {
		toSerialize["providerId"] = o.ProviderId
	}
	if o.TenantId != nil {
		toSerialize["tenantId"] = o.TenantId
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	if o.SubscriptionId != nil {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if o.CreatedOn != nil {
		toSerialize["createdOn"] = o.CreatedOn
	}
	if o.ModifiedOn.IsSet() {
		toSerialize["modifiedOn"] = o.ModifiedOn.Get()
	}
	if o.ProvisionedOn != nil {
		toSerialize["provisionedOn"] = o.ProvisionedOn
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ServiceAllOf) UnmarshalJSON(bytes []byte) (err error) {
	varServiceAllOf := _ServiceAllOf{}

	if err = json.Unmarshal(bytes, &varServiceAllOf); err == nil {
		*o = ServiceAllOf(varServiceAllOf)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "providerId")
		delete(additionalProperties, "tenantId")
		delete(additionalProperties, "userId")
		delete(additionalProperties, "subscriptionId")
		delete(additionalProperties, "createdOn")
		delete(additionalProperties, "modifiedOn")
		delete(additionalProperties, "provisionedOn")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServiceAllOf struct {
	value *ServiceAllOf
	isSet bool
}

func (v NullableServiceAllOf) Get() *ServiceAllOf {
	return v.value
}

func (v *NullableServiceAllOf) Set(val *ServiceAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceAllOf(val *ServiceAllOf) *NullableServiceAllOf {
	return &NullableServiceAllOf{value: val, isSet: true}
}

func (v NullableServiceAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


