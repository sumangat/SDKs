/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// LegacyServiceOrder struct for LegacyServiceOrder
type LegacyServiceOrder struct {
	MessageId *string `json:"messageId,omitempty"`
	Type *string `json:"type,omitempty"`
	ServiceType *string `json:"serviceType,omitempty"`
	Action *string `json:"action,omitempty"`
	Schedule *LegacyScheduleConfig `json:"schedule,omitempty"`
	Payload *LegacyServiceOrderDetail `json:"payload,omitempty"`
	TransactionUUID *string `json:"transactionUUID,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LegacyServiceOrder LegacyServiceOrder

// NewLegacyServiceOrder instantiates a new LegacyServiceOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLegacyServiceOrder() *LegacyServiceOrder {
	this := LegacyServiceOrder{}
	return &this
}

// NewLegacyServiceOrderWithDefaults instantiates a new LegacyServiceOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLegacyServiceOrderWithDefaults() *LegacyServiceOrder {
	this := LegacyServiceOrder{}
	return &this
}

// GetMessageId returns the MessageId field value if set, zero value otherwise.
func (o *LegacyServiceOrder) GetMessageId() string {
	if o == nil || o.MessageId == nil {
		var ret string
		return ret
	}
	return *o.MessageId
}

// GetMessageIdOk returns a tuple with the MessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrder) GetMessageIdOk() (*string, bool) {
	if o == nil || o.MessageId == nil {
		return nil, false
	}
	return o.MessageId, true
}

// HasMessageId returns a boolean if a field has been set.
func (o *LegacyServiceOrder) HasMessageId() bool {
	if o != nil && o.MessageId != nil {
		return true
	}

	return false
}

// SetMessageId gets a reference to the given string and assigns it to the MessageId field.
func (o *LegacyServiceOrder) SetMessageId(v string) {
	o.MessageId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *LegacyServiceOrder) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrder) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *LegacyServiceOrder) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *LegacyServiceOrder) SetType(v string) {
	o.Type = &v
}

// GetServiceType returns the ServiceType field value if set, zero value otherwise.
func (o *LegacyServiceOrder) GetServiceType() string {
	if o == nil || o.ServiceType == nil {
		var ret string
		return ret
	}
	return *o.ServiceType
}

// GetServiceTypeOk returns a tuple with the ServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrder) GetServiceTypeOk() (*string, bool) {
	if o == nil || o.ServiceType == nil {
		return nil, false
	}
	return o.ServiceType, true
}

// HasServiceType returns a boolean if a field has been set.
func (o *LegacyServiceOrder) HasServiceType() bool {
	if o != nil && o.ServiceType != nil {
		return true
	}

	return false
}

// SetServiceType gets a reference to the given string and assigns it to the ServiceType field.
func (o *LegacyServiceOrder) SetServiceType(v string) {
	o.ServiceType = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *LegacyServiceOrder) GetAction() string {
	if o == nil || o.Action == nil {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrder) GetActionOk() (*string, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *LegacyServiceOrder) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *LegacyServiceOrder) SetAction(v string) {
	o.Action = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *LegacyServiceOrder) GetSchedule() LegacyScheduleConfig {
	if o == nil || o.Schedule == nil {
		var ret LegacyScheduleConfig
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrder) GetScheduleOk() (*LegacyScheduleConfig, bool) {
	if o == nil || o.Schedule == nil {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *LegacyServiceOrder) HasSchedule() bool {
	if o != nil && o.Schedule != nil {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given LegacyScheduleConfig and assigns it to the Schedule field.
func (o *LegacyServiceOrder) SetSchedule(v LegacyScheduleConfig) {
	o.Schedule = &v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *LegacyServiceOrder) GetPayload() LegacyServiceOrderDetail {
	if o == nil || o.Payload == nil {
		var ret LegacyServiceOrderDetail
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrder) GetPayloadOk() (*LegacyServiceOrderDetail, bool) {
	if o == nil || o.Payload == nil {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *LegacyServiceOrder) HasPayload() bool {
	if o != nil && o.Payload != nil {
		return true
	}

	return false
}

// SetPayload gets a reference to the given LegacyServiceOrderDetail and assigns it to the Payload field.
func (o *LegacyServiceOrder) SetPayload(v LegacyServiceOrderDetail) {
	o.Payload = &v
}

// GetTransactionUUID returns the TransactionUUID field value if set, zero value otherwise.
func (o *LegacyServiceOrder) GetTransactionUUID() string {
	if o == nil || o.TransactionUUID == nil {
		var ret string
		return ret
	}
	return *o.TransactionUUID
}

// GetTransactionUUIDOk returns a tuple with the TransactionUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyServiceOrder) GetTransactionUUIDOk() (*string, bool) {
	if o == nil || o.TransactionUUID == nil {
		return nil, false
	}
	return o.TransactionUUID, true
}

// HasTransactionUUID returns a boolean if a field has been set.
func (o *LegacyServiceOrder) HasTransactionUUID() bool {
	if o != nil && o.TransactionUUID != nil {
		return true
	}

	return false
}

// SetTransactionUUID gets a reference to the given string and assigns it to the TransactionUUID field.
func (o *LegacyServiceOrder) SetTransactionUUID(v string) {
	o.TransactionUUID = &v
}

func (o LegacyServiceOrder) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MessageId != nil {
		toSerialize["messageId"] = o.MessageId
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.ServiceType != nil {
		toSerialize["serviceType"] = o.ServiceType
	}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	if o.Schedule != nil {
		toSerialize["schedule"] = o.Schedule
	}
	if o.Payload != nil {
		toSerialize["payload"] = o.Payload
	}
	if o.TransactionUUID != nil {
		toSerialize["transactionUUID"] = o.TransactionUUID
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *LegacyServiceOrder) UnmarshalJSON(bytes []byte) (err error) {
	varLegacyServiceOrder := _LegacyServiceOrder{}

	if err = json.Unmarshal(bytes, &varLegacyServiceOrder); err == nil {
		*o = LegacyServiceOrder(varLegacyServiceOrder)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "messageId")
		delete(additionalProperties, "type")
		delete(additionalProperties, "serviceType")
		delete(additionalProperties, "action")
		delete(additionalProperties, "schedule")
		delete(additionalProperties, "payload")
		delete(additionalProperties, "transactionUUID")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLegacyServiceOrder struct {
	value *LegacyServiceOrder
	isSet bool
}

func (v NullableLegacyServiceOrder) Get() *LegacyServiceOrder {
	return v.value
}

func (v *NullableLegacyServiceOrder) Set(val *LegacyServiceOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableLegacyServiceOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableLegacyServiceOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLegacyServiceOrder(val *LegacyServiceOrder) *NullableLegacyServiceOrder {
	return &NullableLegacyServiceOrder{value: val, isSet: true}
}

func (v NullableLegacyServiceOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLegacyServiceOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


