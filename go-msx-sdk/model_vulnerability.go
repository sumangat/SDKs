/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
	"time"
)

// Vulnerability struct for Vulnerability
type Vulnerability struct {
	// CVE identitfier (https://www.cvedetails.com/cve-help.php).
	CveId string `json:"cveId"`
	Url string `json:"url"`
	Severity VulnerabilitySeverity `json:"severity"`
	PublishedOn time.Time `json:"publishedOn"`
	ModifiedOn time.Time `json:"modifiedOn"`
	Vendor string `json:"vendor"`
	Product string `json:"product"`
	Version string `json:"version"`
	AdditionalProperties map[string]interface{}
}

type _Vulnerability Vulnerability

// NewVulnerability instantiates a new Vulnerability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVulnerability(cveId string, url string, severity VulnerabilitySeverity, publishedOn time.Time, modifiedOn time.Time, vendor string, product string, version string) *Vulnerability {
	this := Vulnerability{}
	this.CveId = cveId
	this.Url = url
	this.Severity = severity
	this.PublishedOn = publishedOn
	this.ModifiedOn = modifiedOn
	this.Vendor = vendor
	this.Product = product
	this.Version = version
	return &this
}

// NewVulnerabilityWithDefaults instantiates a new Vulnerability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVulnerabilityWithDefaults() *Vulnerability {
	this := Vulnerability{}
	return &this
}

// GetCveId returns the CveId field value
func (o *Vulnerability) GetCveId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CveId
}

// GetCveIdOk returns a tuple with the CveId field value
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetCveIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CveId, true
}

// SetCveId sets field value
func (o *Vulnerability) SetCveId(v string) {
	o.CveId = v
}

// GetUrl returns the Url field value
func (o *Vulnerability) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *Vulnerability) SetUrl(v string) {
	o.Url = v
}

// GetSeverity returns the Severity field value
func (o *Vulnerability) GetSeverity() VulnerabilitySeverity {
	if o == nil {
		var ret VulnerabilitySeverity
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetSeverityOk() (*VulnerabilitySeverity, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *Vulnerability) SetSeverity(v VulnerabilitySeverity) {
	o.Severity = v
}

// GetPublishedOn returns the PublishedOn field value
func (o *Vulnerability) GetPublishedOn() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.PublishedOn
}

// GetPublishedOnOk returns a tuple with the PublishedOn field value
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetPublishedOnOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PublishedOn, true
}

// SetPublishedOn sets field value
func (o *Vulnerability) SetPublishedOn(v time.Time) {
	o.PublishedOn = v
}

// GetModifiedOn returns the ModifiedOn field value
func (o *Vulnerability) GetModifiedOn() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedOn
}

// GetModifiedOnOk returns a tuple with the ModifiedOn field value
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetModifiedOnOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ModifiedOn, true
}

// SetModifiedOn sets field value
func (o *Vulnerability) SetModifiedOn(v time.Time) {
	o.ModifiedOn = v
}

// GetVendor returns the Vendor field value
func (o *Vulnerability) GetVendor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetVendorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Vendor, true
}

// SetVendor sets field value
func (o *Vulnerability) SetVendor(v string) {
	o.Vendor = v
}

// GetProduct returns the Product field value
func (o *Vulnerability) GetProduct() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Product
}

// GetProductOk returns a tuple with the Product field value
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetProductOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Product, true
}

// SetProduct sets field value
func (o *Vulnerability) SetProduct(v string) {
	o.Product = v
}

// GetVersion returns the Version field value
func (o *Vulnerability) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *Vulnerability) GetVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *Vulnerability) SetVersion(v string) {
	o.Version = v
}

func (o Vulnerability) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cveId"] = o.CveId
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["severity"] = o.Severity
	}
	if true {
		toSerialize["publishedOn"] = o.PublishedOn
	}
	if true {
		toSerialize["modifiedOn"] = o.ModifiedOn
	}
	if true {
		toSerialize["vendor"] = o.Vendor
	}
	if true {
		toSerialize["product"] = o.Product
	}
	if true {
		toSerialize["version"] = o.Version
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *Vulnerability) UnmarshalJSON(bytes []byte) (err error) {
	varVulnerability := _Vulnerability{}

	if err = json.Unmarshal(bytes, &varVulnerability); err == nil {
		*o = Vulnerability(varVulnerability)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "cveId")
		delete(additionalProperties, "url")
		delete(additionalProperties, "severity")
		delete(additionalProperties, "publishedOn")
		delete(additionalProperties, "modifiedOn")
		delete(additionalProperties, "vendor")
		delete(additionalProperties, "product")
		delete(additionalProperties, "version")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVulnerability struct {
	value *Vulnerability
	isSet bool
}

func (v NullableVulnerability) Get() *Vulnerability {
	return v.value
}

func (v *NullableVulnerability) Set(val *Vulnerability) {
	v.value = val
	v.isSet = true
}

func (v NullableVulnerability) IsSet() bool {
	return v.isSet
}

func (v *NullableVulnerability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVulnerability(val *Vulnerability) *NullableVulnerability {
	return &NullableVulnerability{value: val, isSet: true}
}

func (v NullableVulnerability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVulnerability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


