/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// WorkflowMapping struct for WorkflowMapping
type WorkflowMapping struct {
	Id *string `json:"id,omitempty"`
	TenantIds *[]string `json:"tenantIds,omitempty"`
	UniqueName *string `json:"uniqueName,omitempty"`
	CreatedBy *string `json:"createdBy,omitempty"`
	CreatedOn *string `json:"createdOn,omitempty"`
	ModifiedBy *string `json:"modifiedBy,omitempty"`
	ModifiedOn *string `json:"modifiedOn,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WorkflowMapping WorkflowMapping

// NewWorkflowMapping instantiates a new WorkflowMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowMapping() *WorkflowMapping {
	this := WorkflowMapping{}
	return &this
}

// NewWorkflowMappingWithDefaults instantiates a new WorkflowMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowMappingWithDefaults() *WorkflowMapping {
	this := WorkflowMapping{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WorkflowMapping) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowMapping) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WorkflowMapping) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WorkflowMapping) SetId(v string) {
	o.Id = &v
}

// GetTenantIds returns the TenantIds field value if set, zero value otherwise.
func (o *WorkflowMapping) GetTenantIds() []string {
	if o == nil || o.TenantIds == nil {
		var ret []string
		return ret
	}
	return *o.TenantIds
}

// GetTenantIdsOk returns a tuple with the TenantIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowMapping) GetTenantIdsOk() (*[]string, bool) {
	if o == nil || o.TenantIds == nil {
		return nil, false
	}
	return o.TenantIds, true
}

// HasTenantIds returns a boolean if a field has been set.
func (o *WorkflowMapping) HasTenantIds() bool {
	if o != nil && o.TenantIds != nil {
		return true
	}

	return false
}

// SetTenantIds gets a reference to the given []string and assigns it to the TenantIds field.
func (o *WorkflowMapping) SetTenantIds(v []string) {
	o.TenantIds = &v
}

// GetUniqueName returns the UniqueName field value if set, zero value otherwise.
func (o *WorkflowMapping) GetUniqueName() string {
	if o == nil || o.UniqueName == nil {
		var ret string
		return ret
	}
	return *o.UniqueName
}

// GetUniqueNameOk returns a tuple with the UniqueName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowMapping) GetUniqueNameOk() (*string, bool) {
	if o == nil || o.UniqueName == nil {
		return nil, false
	}
	return o.UniqueName, true
}

// HasUniqueName returns a boolean if a field has been set.
func (o *WorkflowMapping) HasUniqueName() bool {
	if o != nil && o.UniqueName != nil {
		return true
	}

	return false
}

// SetUniqueName gets a reference to the given string and assigns it to the UniqueName field.
func (o *WorkflowMapping) SetUniqueName(v string) {
	o.UniqueName = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *WorkflowMapping) GetCreatedBy() string {
	if o == nil || o.CreatedBy == nil {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowMapping) GetCreatedByOk() (*string, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *WorkflowMapping) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *WorkflowMapping) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *WorkflowMapping) GetCreatedOn() string {
	if o == nil || o.CreatedOn == nil {
		var ret string
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowMapping) GetCreatedOnOk() (*string, bool) {
	if o == nil || o.CreatedOn == nil {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *WorkflowMapping) HasCreatedOn() bool {
	if o != nil && o.CreatedOn != nil {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given string and assigns it to the CreatedOn field.
func (o *WorkflowMapping) SetCreatedOn(v string) {
	o.CreatedOn = &v
}

// GetModifiedBy returns the ModifiedBy field value if set, zero value otherwise.
func (o *WorkflowMapping) GetModifiedBy() string {
	if o == nil || o.ModifiedBy == nil {
		var ret string
		return ret
	}
	return *o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowMapping) GetModifiedByOk() (*string, bool) {
	if o == nil || o.ModifiedBy == nil {
		return nil, false
	}
	return o.ModifiedBy, true
}

// HasModifiedBy returns a boolean if a field has been set.
func (o *WorkflowMapping) HasModifiedBy() bool {
	if o != nil && o.ModifiedBy != nil {
		return true
	}

	return false
}

// SetModifiedBy gets a reference to the given string and assigns it to the ModifiedBy field.
func (o *WorkflowMapping) SetModifiedBy(v string) {
	o.ModifiedBy = &v
}

// GetModifiedOn returns the ModifiedOn field value if set, zero value otherwise.
func (o *WorkflowMapping) GetModifiedOn() string {
	if o == nil || o.ModifiedOn == nil {
		var ret string
		return ret
	}
	return *o.ModifiedOn
}

// GetModifiedOnOk returns a tuple with the ModifiedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowMapping) GetModifiedOnOk() (*string, bool) {
	if o == nil || o.ModifiedOn == nil {
		return nil, false
	}
	return o.ModifiedOn, true
}

// HasModifiedOn returns a boolean if a field has been set.
func (o *WorkflowMapping) HasModifiedOn() bool {
	if o != nil && o.ModifiedOn != nil {
		return true
	}

	return false
}

// SetModifiedOn gets a reference to the given string and assigns it to the ModifiedOn field.
func (o *WorkflowMapping) SetModifiedOn(v string) {
	o.ModifiedOn = &v
}

func (o WorkflowMapping) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.TenantIds != nil {
		toSerialize["tenantIds"] = o.TenantIds
	}
	if o.UniqueName != nil {
		toSerialize["uniqueName"] = o.UniqueName
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.CreatedOn != nil {
		toSerialize["createdOn"] = o.CreatedOn
	}
	if o.ModifiedBy != nil {
		toSerialize["modifiedBy"] = o.ModifiedBy
	}
	if o.ModifiedOn != nil {
		toSerialize["modifiedOn"] = o.ModifiedOn
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *WorkflowMapping) UnmarshalJSON(bytes []byte) (err error) {
	varWorkflowMapping := _WorkflowMapping{}

	if err = json.Unmarshal(bytes, &varWorkflowMapping); err == nil {
		*o = WorkflowMapping(varWorkflowMapping)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "tenantIds")
		delete(additionalProperties, "uniqueName")
		delete(additionalProperties, "createdBy")
		delete(additionalProperties, "createdOn")
		delete(additionalProperties, "modifiedBy")
		delete(additionalProperties, "modifiedOn")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWorkflowMapping struct {
	value *WorkflowMapping
	isSet bool
}

func (v NullableWorkflowMapping) Get() *WorkflowMapping {
	return v.value
}

func (v *NullableWorkflowMapping) Set(val *WorkflowMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowMapping(val *WorkflowMapping) *NullableWorkflowMapping {
	return &NullableWorkflowMapping{value: val, isSet: true}
}

func (v NullableWorkflowMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


