/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// WorkflowInstanceDeleteResponse struct for WorkflowInstanceDeleteResponse
type WorkflowInstanceDeleteResponse struct {
	DeletedChildWorkflowInstanceIds []string `json:"deleted_child_workflow_instance_ids,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WorkflowInstanceDeleteResponse WorkflowInstanceDeleteResponse

// NewWorkflowInstanceDeleteResponse instantiates a new WorkflowInstanceDeleteResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowInstanceDeleteResponse() *WorkflowInstanceDeleteResponse {
	this := WorkflowInstanceDeleteResponse{}
	return &this
}

// NewWorkflowInstanceDeleteResponseWithDefaults instantiates a new WorkflowInstanceDeleteResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowInstanceDeleteResponseWithDefaults() *WorkflowInstanceDeleteResponse {
	this := WorkflowInstanceDeleteResponse{}
	return &this
}

// GetDeletedChildWorkflowInstanceIds returns the DeletedChildWorkflowInstanceIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowInstanceDeleteResponse) GetDeletedChildWorkflowInstanceIds() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.DeletedChildWorkflowInstanceIds
}

// GetDeletedChildWorkflowInstanceIdsOk returns a tuple with the DeletedChildWorkflowInstanceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowInstanceDeleteResponse) GetDeletedChildWorkflowInstanceIdsOk() (*[]string, bool) {
	if o == nil || o.DeletedChildWorkflowInstanceIds == nil {
		return nil, false
	}
	return &o.DeletedChildWorkflowInstanceIds, true
}

// HasDeletedChildWorkflowInstanceIds returns a boolean if a field has been set.
func (o *WorkflowInstanceDeleteResponse) HasDeletedChildWorkflowInstanceIds() bool {
	if o != nil && o.DeletedChildWorkflowInstanceIds != nil {
		return true
	}

	return false
}

// SetDeletedChildWorkflowInstanceIds gets a reference to the given []string and assigns it to the DeletedChildWorkflowInstanceIds field.
func (o *WorkflowInstanceDeleteResponse) SetDeletedChildWorkflowInstanceIds(v []string) {
	o.DeletedChildWorkflowInstanceIds = v
}

func (o WorkflowInstanceDeleteResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeletedChildWorkflowInstanceIds != nil {
		toSerialize["deleted_child_workflow_instance_ids"] = o.DeletedChildWorkflowInstanceIds
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *WorkflowInstanceDeleteResponse) UnmarshalJSON(bytes []byte) (err error) {
	varWorkflowInstanceDeleteResponse := _WorkflowInstanceDeleteResponse{}

	if err = json.Unmarshal(bytes, &varWorkflowInstanceDeleteResponse); err == nil {
		*o = WorkflowInstanceDeleteResponse(varWorkflowInstanceDeleteResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "deleted_child_workflow_instance_ids")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWorkflowInstanceDeleteResponse struct {
	value *WorkflowInstanceDeleteResponse
	isSet bool
}

func (v NullableWorkflowInstanceDeleteResponse) Get() *WorkflowInstanceDeleteResponse {
	return v.value
}

func (v *NullableWorkflowInstanceDeleteResponse) Set(val *WorkflowInstanceDeleteResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowInstanceDeleteResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowInstanceDeleteResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowInstanceDeleteResponse(val *WorkflowInstanceDeleteResponse) *NullableWorkflowInstanceDeleteResponse {
	return &NullableWorkflowInstanceDeleteResponse{value: val, isSet: true}
}

func (v NullableWorkflowInstanceDeleteResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowInstanceDeleteResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


