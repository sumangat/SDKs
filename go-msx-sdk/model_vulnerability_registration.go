/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
	"time"
)

// VulnerabilityRegistration struct for VulnerabilityRegistration
type VulnerabilityRegistration struct {
	Id *string `json:"id,omitempty"`
	RegisteredOn *time.Time `json:"registeredOn,omitempty"`
	Product *string `json:"product,omitempty"`
	Version *string `json:"version,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _VulnerabilityRegistration VulnerabilityRegistration

// NewVulnerabilityRegistration instantiates a new VulnerabilityRegistration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVulnerabilityRegistration() *VulnerabilityRegistration {
	this := VulnerabilityRegistration{}
	return &this
}

// NewVulnerabilityRegistrationWithDefaults instantiates a new VulnerabilityRegistration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVulnerabilityRegistrationWithDefaults() *VulnerabilityRegistration {
	this := VulnerabilityRegistration{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VulnerabilityRegistration) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityRegistration) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VulnerabilityRegistration) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VulnerabilityRegistration) SetId(v string) {
	o.Id = &v
}

// GetRegisteredOn returns the RegisteredOn field value if set, zero value otherwise.
func (o *VulnerabilityRegistration) GetRegisteredOn() time.Time {
	if o == nil || o.RegisteredOn == nil {
		var ret time.Time
		return ret
	}
	return *o.RegisteredOn
}

// GetRegisteredOnOk returns a tuple with the RegisteredOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityRegistration) GetRegisteredOnOk() (*time.Time, bool) {
	if o == nil || o.RegisteredOn == nil {
		return nil, false
	}
	return o.RegisteredOn, true
}

// HasRegisteredOn returns a boolean if a field has been set.
func (o *VulnerabilityRegistration) HasRegisteredOn() bool {
	if o != nil && o.RegisteredOn != nil {
		return true
	}

	return false
}

// SetRegisteredOn gets a reference to the given time.Time and assigns it to the RegisteredOn field.
func (o *VulnerabilityRegistration) SetRegisteredOn(v time.Time) {
	o.RegisteredOn = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *VulnerabilityRegistration) GetProduct() string {
	if o == nil || o.Product == nil {
		var ret string
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityRegistration) GetProductOk() (*string, bool) {
	if o == nil || o.Product == nil {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *VulnerabilityRegistration) HasProduct() bool {
	if o != nil && o.Product != nil {
		return true
	}

	return false
}

// SetProduct gets a reference to the given string and assigns it to the Product field.
func (o *VulnerabilityRegistration) SetProduct(v string) {
	o.Product = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *VulnerabilityRegistration) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityRegistration) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *VulnerabilityRegistration) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *VulnerabilityRegistration) SetVersion(v string) {
	o.Version = &v
}

func (o VulnerabilityRegistration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.RegisteredOn != nil {
		toSerialize["registeredOn"] = o.RegisteredOn
	}
	if o.Product != nil {
		toSerialize["product"] = o.Product
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *VulnerabilityRegistration) UnmarshalJSON(bytes []byte) (err error) {
	varVulnerabilityRegistration := _VulnerabilityRegistration{}

	if err = json.Unmarshal(bytes, &varVulnerabilityRegistration); err == nil {
		*o = VulnerabilityRegistration(varVulnerabilityRegistration)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "registeredOn")
		delete(additionalProperties, "product")
		delete(additionalProperties, "version")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVulnerabilityRegistration struct {
	value *VulnerabilityRegistration
	isSet bool
}

func (v NullableVulnerabilityRegistration) Get() *VulnerabilityRegistration {
	return v.value
}

func (v *NullableVulnerabilityRegistration) Set(val *VulnerabilityRegistration) {
	v.value = val
	v.isSet = true
}

func (v NullableVulnerabilityRegistration) IsSet() bool {
	return v.isSet
}

func (v *NullableVulnerabilityRegistration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVulnerabilityRegistration(val *VulnerabilityRegistration) *NullableVulnerabilityRegistration {
	return &NullableVulnerabilityRegistration{value: val, isSet: true}
}

func (v NullableVulnerabilityRegistration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVulnerabilityRegistration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


