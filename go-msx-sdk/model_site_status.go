/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
	"time"
)

// SiteStatus struct for SiteStatus
type SiteStatus struct {
	Type string `json:"type"`
	Name string `json:"name"`
	Value string `json:"value"`
	Severity string `json:"severity"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	LastUpdatedMessage string `json:"lastUpdatedMessage"`
	AdditionalProperties map[string]interface{}
}

type _SiteStatus SiteStatus

// NewSiteStatus instantiates a new SiteStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSiteStatus(type_ string, name string, value string, severity string, lastUpdatedMessage string) *SiteStatus {
	this := SiteStatus{}
	this.Type = type_
	this.Name = name
	this.Value = value
	this.Severity = severity
	this.LastUpdatedMessage = lastUpdatedMessage
	return &this
}

// NewSiteStatusWithDefaults instantiates a new SiteStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSiteStatusWithDefaults() *SiteStatus {
	this := SiteStatus{}
	var type_ string = "unknown"
	this.Type = type_
	var name string = "unknown"
	this.Name = name
	var value string = "unknown"
	this.Value = value
	return &this
}

// GetType returns the Type field value
func (o *SiteStatus) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SiteStatus) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SiteStatus) SetType(v string) {
	o.Type = v
}

// GetName returns the Name field value
func (o *SiteStatus) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SiteStatus) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SiteStatus) SetName(v string) {
	o.Name = v
}

// GetValue returns the Value field value
func (o *SiteStatus) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *SiteStatus) GetValueOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *SiteStatus) SetValue(v string) {
	o.Value = v
}

// GetSeverity returns the Severity field value
func (o *SiteStatus) GetSeverity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *SiteStatus) GetSeverityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *SiteStatus) SetSeverity(v string) {
	o.Severity = v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *SiteStatus) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteStatus) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *SiteStatus) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *SiteStatus) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastUpdatedMessage returns the LastUpdatedMessage field value
func (o *SiteStatus) GetLastUpdatedMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastUpdatedMessage
}

// GetLastUpdatedMessageOk returns a tuple with the LastUpdatedMessage field value
// and a boolean to check if the value has been set.
func (o *SiteStatus) GetLastUpdatedMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LastUpdatedMessage, true
}

// SetLastUpdatedMessage sets field value
func (o *SiteStatus) SetLastUpdatedMessage(v string) {
	o.LastUpdatedMessage = v
}

func (o SiteStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["value"] = o.Value
	}
	if true {
		toSerialize["severity"] = o.Severity
	}
	if o.LastUpdated != nil {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if true {
		toSerialize["lastUpdatedMessage"] = o.LastUpdatedMessage
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *SiteStatus) UnmarshalJSON(bytes []byte) (err error) {
	varSiteStatus := _SiteStatus{}

	if err = json.Unmarshal(bytes, &varSiteStatus); err == nil {
		*o = SiteStatus(varSiteStatus)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "name")
		delete(additionalProperties, "value")
		delete(additionalProperties, "severity")
		delete(additionalProperties, "lastUpdated")
		delete(additionalProperties, "lastUpdatedMessage")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSiteStatus struct {
	value *SiteStatus
	isSet bool
}

func (v NullableSiteStatus) Get() *SiteStatus {
	return v.value
}

func (v *NullableSiteStatus) Set(val *SiteStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSiteStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSiteStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSiteStatus(val *SiteStatus) *NullableSiteStatus {
	return &NullableSiteStatus{value: val, isSet: true}
}

func (v NullableSiteStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSiteStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


