/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// ServiceUILink struct for ServiceUILink
type ServiceUILink struct {
	Type *string `json:"type,omitempty"`
	Label *string `json:"label,omitempty"`
	Address *string `json:"address,omitempty"`
	Target *string `json:"target,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServiceUILink ServiceUILink

// NewServiceUILink instantiates a new ServiceUILink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceUILink() *ServiceUILink {
	this := ServiceUILink{}
	return &this
}

// NewServiceUILinkWithDefaults instantiates a new ServiceUILink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceUILinkWithDefaults() *ServiceUILink {
	this := ServiceUILink{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ServiceUILink) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUILink) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ServiceUILink) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ServiceUILink) SetType(v string) {
	o.Type = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *ServiceUILink) GetLabel() string {
	if o == nil || o.Label == nil {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUILink) GetLabelOk() (*string, bool) {
	if o == nil || o.Label == nil {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *ServiceUILink) HasLabel() bool {
	if o != nil && o.Label != nil {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *ServiceUILink) SetLabel(v string) {
	o.Label = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *ServiceUILink) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUILink) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *ServiceUILink) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *ServiceUILink) SetAddress(v string) {
	o.Address = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *ServiceUILink) GetTarget() string {
	if o == nil || o.Target == nil {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceUILink) GetTargetOk() (*string, bool) {
	if o == nil || o.Target == nil {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *ServiceUILink) HasTarget() bool {
	if o != nil && o.Target != nil {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *ServiceUILink) SetTarget(v string) {
	o.Target = &v
}

func (o ServiceUILink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Label != nil {
		toSerialize["label"] = o.Label
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.Target != nil {
		toSerialize["target"] = o.Target
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ServiceUILink) UnmarshalJSON(bytes []byte) (err error) {
	varServiceUILink := _ServiceUILink{}

	if err = json.Unmarshal(bytes, &varServiceUILink); err == nil {
		*o = ServiceUILink(varServiceUILink)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "label")
		delete(additionalProperties, "address")
		delete(additionalProperties, "target")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServiceUILink struct {
	value *ServiceUILink
	isSet bool
}

func (v NullableServiceUILink) Get() *ServiceUILink {
	return v.value
}

func (v *NullableServiceUILink) Set(val *ServiceUILink) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceUILink) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceUILink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceUILink(val *ServiceUILink) *NullableServiceUILink {
	return &NullableServiceUILink{value: val, isSet: true}
}

func (v NullableServiceUILink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceUILink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


