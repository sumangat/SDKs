/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// SmartAccountUserRole struct for SmartAccountUserRole
type SmartAccountUserRole struct {
	RoleName *string `json:"roleName,omitempty"`
	// Virtual Account identifier
	VirtualAccountId *int32 `json:"virtualAccountId,omitempty"`
	// Virtual Account Name
	VirtualAccountName *string `json:"virtualAccountName,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SmartAccountUserRole SmartAccountUserRole

// NewSmartAccountUserRole instantiates a new SmartAccountUserRole object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmartAccountUserRole() *SmartAccountUserRole {
	this := SmartAccountUserRole{}
	return &this
}

// NewSmartAccountUserRoleWithDefaults instantiates a new SmartAccountUserRole object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmartAccountUserRoleWithDefaults() *SmartAccountUserRole {
	this := SmartAccountUserRole{}
	return &this
}

// GetRoleName returns the RoleName field value if set, zero value otherwise.
func (o *SmartAccountUserRole) GetRoleName() string {
	if o == nil || o.RoleName == nil {
		var ret string
		return ret
	}
	return *o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartAccountUserRole) GetRoleNameOk() (*string, bool) {
	if o == nil || o.RoleName == nil {
		return nil, false
	}
	return o.RoleName, true
}

// HasRoleName returns a boolean if a field has been set.
func (o *SmartAccountUserRole) HasRoleName() bool {
	if o != nil && o.RoleName != nil {
		return true
	}

	return false
}

// SetRoleName gets a reference to the given string and assigns it to the RoleName field.
func (o *SmartAccountUserRole) SetRoleName(v string) {
	o.RoleName = &v
}

// GetVirtualAccountId returns the VirtualAccountId field value if set, zero value otherwise.
func (o *SmartAccountUserRole) GetVirtualAccountId() int32 {
	if o == nil || o.VirtualAccountId == nil {
		var ret int32
		return ret
	}
	return *o.VirtualAccountId
}

// GetVirtualAccountIdOk returns a tuple with the VirtualAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartAccountUserRole) GetVirtualAccountIdOk() (*int32, bool) {
	if o == nil || o.VirtualAccountId == nil {
		return nil, false
	}
	return o.VirtualAccountId, true
}

// HasVirtualAccountId returns a boolean if a field has been set.
func (o *SmartAccountUserRole) HasVirtualAccountId() bool {
	if o != nil && o.VirtualAccountId != nil {
		return true
	}

	return false
}

// SetVirtualAccountId gets a reference to the given int32 and assigns it to the VirtualAccountId field.
func (o *SmartAccountUserRole) SetVirtualAccountId(v int32) {
	o.VirtualAccountId = &v
}

// GetVirtualAccountName returns the VirtualAccountName field value if set, zero value otherwise.
func (o *SmartAccountUserRole) GetVirtualAccountName() string {
	if o == nil || o.VirtualAccountName == nil {
		var ret string
		return ret
	}
	return *o.VirtualAccountName
}

// GetVirtualAccountNameOk returns a tuple with the VirtualAccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartAccountUserRole) GetVirtualAccountNameOk() (*string, bool) {
	if o == nil || o.VirtualAccountName == nil {
		return nil, false
	}
	return o.VirtualAccountName, true
}

// HasVirtualAccountName returns a boolean if a field has been set.
func (o *SmartAccountUserRole) HasVirtualAccountName() bool {
	if o != nil && o.VirtualAccountName != nil {
		return true
	}

	return false
}

// SetVirtualAccountName gets a reference to the given string and assigns it to the VirtualAccountName field.
func (o *SmartAccountUserRole) SetVirtualAccountName(v string) {
	o.VirtualAccountName = &v
}

func (o SmartAccountUserRole) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RoleName != nil {
		toSerialize["roleName"] = o.RoleName
	}
	if o.VirtualAccountId != nil {
		toSerialize["virtualAccountId"] = o.VirtualAccountId
	}
	if o.VirtualAccountName != nil {
		toSerialize["virtualAccountName"] = o.VirtualAccountName
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *SmartAccountUserRole) UnmarshalJSON(bytes []byte) (err error) {
	varSmartAccountUserRole := _SmartAccountUserRole{}

	if err = json.Unmarshal(bytes, &varSmartAccountUserRole); err == nil {
		*o = SmartAccountUserRole(varSmartAccountUserRole)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "roleName")
		delete(additionalProperties, "virtualAccountId")
		delete(additionalProperties, "virtualAccountName")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSmartAccountUserRole struct {
	value *SmartAccountUserRole
	isSet bool
}

func (v NullableSmartAccountUserRole) Get() *SmartAccountUserRole {
	return v.value
}

func (v *NullableSmartAccountUserRole) Set(val *SmartAccountUserRole) {
	v.value = val
	v.isSet = true
}

func (v NullableSmartAccountUserRole) IsSet() bool {
	return v.isSet
}

func (v *NullableSmartAccountUserRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmartAccountUserRole(val *SmartAccountUserRole) *NullableSmartAccountUserRole {
	return &NullableSmartAccountUserRole{value: val, isSet: true}
}

func (v NullableSmartAccountUserRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmartAccountUserRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


