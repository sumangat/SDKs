/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// WorkflowDefAccessMeta struct for WorkflowDefAccessMeta
type WorkflowDefAccessMeta struct {
	IsIntegration NullableBool `json:"is_integration,omitempty"`
	IsInternal *bool `json:"is_internal,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WorkflowDefAccessMeta WorkflowDefAccessMeta

// NewWorkflowDefAccessMeta instantiates a new WorkflowDefAccessMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowDefAccessMeta() *WorkflowDefAccessMeta {
	this := WorkflowDefAccessMeta{}
	return &this
}

// NewWorkflowDefAccessMetaWithDefaults instantiates a new WorkflowDefAccessMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowDefAccessMetaWithDefaults() *WorkflowDefAccessMeta {
	this := WorkflowDefAccessMeta{}
	return &this
}

// GetIsIntegration returns the IsIntegration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkflowDefAccessMeta) GetIsIntegration() bool {
	if o == nil || o.IsIntegration.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsIntegration.Get()
}

// GetIsIntegrationOk returns a tuple with the IsIntegration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkflowDefAccessMeta) GetIsIntegrationOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsIntegration.Get(), o.IsIntegration.IsSet()
}

// HasIsIntegration returns a boolean if a field has been set.
func (o *WorkflowDefAccessMeta) HasIsIntegration() bool {
	if o != nil && o.IsIntegration.IsSet() {
		return true
	}

	return false
}

// SetIsIntegration gets a reference to the given NullableBool and assigns it to the IsIntegration field.
func (o *WorkflowDefAccessMeta) SetIsIntegration(v bool) {
	o.IsIntegration.Set(&v)
}
// SetIsIntegrationNil sets the value for IsIntegration to be an explicit nil
func (o *WorkflowDefAccessMeta) SetIsIntegrationNil() {
	o.IsIntegration.Set(nil)
}

// UnsetIsIntegration ensures that no value is present for IsIntegration, not even an explicit nil
func (o *WorkflowDefAccessMeta) UnsetIsIntegration() {
	o.IsIntegration.Unset()
}

// GetIsInternal returns the IsInternal field value if set, zero value otherwise.
func (o *WorkflowDefAccessMeta) GetIsInternal() bool {
	if o == nil || o.IsInternal == nil {
		var ret bool
		return ret
	}
	return *o.IsInternal
}

// GetIsInternalOk returns a tuple with the IsInternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowDefAccessMeta) GetIsInternalOk() (*bool, bool) {
	if o == nil || o.IsInternal == nil {
		return nil, false
	}
	return o.IsInternal, true
}

// HasIsInternal returns a boolean if a field has been set.
func (o *WorkflowDefAccessMeta) HasIsInternal() bool {
	if o != nil && o.IsInternal != nil {
		return true
	}

	return false
}

// SetIsInternal gets a reference to the given bool and assigns it to the IsInternal field.
func (o *WorkflowDefAccessMeta) SetIsInternal(v bool) {
	o.IsInternal = &v
}

func (o WorkflowDefAccessMeta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsIntegration.IsSet() {
		toSerialize["is_integration"] = o.IsIntegration.Get()
	}
	if o.IsInternal != nil {
		toSerialize["is_internal"] = o.IsInternal
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *WorkflowDefAccessMeta) UnmarshalJSON(bytes []byte) (err error) {
	varWorkflowDefAccessMeta := _WorkflowDefAccessMeta{}

	if err = json.Unmarshal(bytes, &varWorkflowDefAccessMeta); err == nil {
		*o = WorkflowDefAccessMeta(varWorkflowDefAccessMeta)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "is_integration")
		delete(additionalProperties, "is_internal")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWorkflowDefAccessMeta struct {
	value *WorkflowDefAccessMeta
	isSet bool
}

func (v NullableWorkflowDefAccessMeta) Get() *WorkflowDefAccessMeta {
	return v.value
}

func (v *NullableWorkflowDefAccessMeta) Set(val *WorkflowDefAccessMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowDefAccessMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowDefAccessMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowDefAccessMeta(val *WorkflowDefAccessMeta) *NullableWorkflowDefAccessMeta {
	return &NullableWorkflowDefAccessMeta{value: val, isSet: true}
}

func (v NullableWorkflowDefAccessMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowDefAccessMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


