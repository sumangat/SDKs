/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// DeviceTemplateHistorySummary struct for DeviceTemplateHistorySummary
type DeviceTemplateHistorySummary struct {
	DeviceId *string `json:"deviceId,omitempty"`
	HttpStatus *string `json:"httpStatus,omitempty"`
	DeviceTemplateHistoryUrl *string `json:"deviceTemplateHistoryUrl,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DeviceTemplateHistorySummary DeviceTemplateHistorySummary

// NewDeviceTemplateHistorySummary instantiates a new DeviceTemplateHistorySummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceTemplateHistorySummary() *DeviceTemplateHistorySummary {
	this := DeviceTemplateHistorySummary{}
	return &this
}

// NewDeviceTemplateHistorySummaryWithDefaults instantiates a new DeviceTemplateHistorySummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceTemplateHistorySummaryWithDefaults() *DeviceTemplateHistorySummary {
	this := DeviceTemplateHistorySummary{}
	return &this
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *DeviceTemplateHistorySummary) GetDeviceId() string {
	if o == nil || o.DeviceId == nil {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceTemplateHistorySummary) GetDeviceIdOk() (*string, bool) {
	if o == nil || o.DeviceId == nil {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *DeviceTemplateHistorySummary) HasDeviceId() bool {
	if o != nil && o.DeviceId != nil {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *DeviceTemplateHistorySummary) SetDeviceId(v string) {
	o.DeviceId = &v
}

// GetHttpStatus returns the HttpStatus field value if set, zero value otherwise.
func (o *DeviceTemplateHistorySummary) GetHttpStatus() string {
	if o == nil || o.HttpStatus == nil {
		var ret string
		return ret
	}
	return *o.HttpStatus
}

// GetHttpStatusOk returns a tuple with the HttpStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceTemplateHistorySummary) GetHttpStatusOk() (*string, bool) {
	if o == nil || o.HttpStatus == nil {
		return nil, false
	}
	return o.HttpStatus, true
}

// HasHttpStatus returns a boolean if a field has been set.
func (o *DeviceTemplateHistorySummary) HasHttpStatus() bool {
	if o != nil && o.HttpStatus != nil {
		return true
	}

	return false
}

// SetHttpStatus gets a reference to the given string and assigns it to the HttpStatus field.
func (o *DeviceTemplateHistorySummary) SetHttpStatus(v string) {
	o.HttpStatus = &v
}

// GetDeviceTemplateHistoryUrl returns the DeviceTemplateHistoryUrl field value if set, zero value otherwise.
func (o *DeviceTemplateHistorySummary) GetDeviceTemplateHistoryUrl() string {
	if o == nil || o.DeviceTemplateHistoryUrl == nil {
		var ret string
		return ret
	}
	return *o.DeviceTemplateHistoryUrl
}

// GetDeviceTemplateHistoryUrlOk returns a tuple with the DeviceTemplateHistoryUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceTemplateHistorySummary) GetDeviceTemplateHistoryUrlOk() (*string, bool) {
	if o == nil || o.DeviceTemplateHistoryUrl == nil {
		return nil, false
	}
	return o.DeviceTemplateHistoryUrl, true
}

// HasDeviceTemplateHistoryUrl returns a boolean if a field has been set.
func (o *DeviceTemplateHistorySummary) HasDeviceTemplateHistoryUrl() bool {
	if o != nil && o.DeviceTemplateHistoryUrl != nil {
		return true
	}

	return false
}

// SetDeviceTemplateHistoryUrl gets a reference to the given string and assigns it to the DeviceTemplateHistoryUrl field.
func (o *DeviceTemplateHistorySummary) SetDeviceTemplateHistoryUrl(v string) {
	o.DeviceTemplateHistoryUrl = &v
}

func (o DeviceTemplateHistorySummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeviceId != nil {
		toSerialize["deviceId"] = o.DeviceId
	}
	if o.HttpStatus != nil {
		toSerialize["httpStatus"] = o.HttpStatus
	}
	if o.DeviceTemplateHistoryUrl != nil {
		toSerialize["deviceTemplateHistoryUrl"] = o.DeviceTemplateHistoryUrl
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *DeviceTemplateHistorySummary) UnmarshalJSON(bytes []byte) (err error) {
	varDeviceTemplateHistorySummary := _DeviceTemplateHistorySummary{}

	if err = json.Unmarshal(bytes, &varDeviceTemplateHistorySummary); err == nil {
		*o = DeviceTemplateHistorySummary(varDeviceTemplateHistorySummary)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "deviceId")
		delete(additionalProperties, "httpStatus")
		delete(additionalProperties, "deviceTemplateHistoryUrl")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDeviceTemplateHistorySummary struct {
	value *DeviceTemplateHistorySummary
	isSet bool
}

func (v NullableDeviceTemplateHistorySummary) Get() *DeviceTemplateHistorySummary {
	return v.value
}

func (v *NullableDeviceTemplateHistorySummary) Set(val *DeviceTemplateHistorySummary) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceTemplateHistorySummary) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceTemplateHistorySummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceTemplateHistorySummary(val *DeviceTemplateHistorySummary) *NullableDeviceTemplateHistorySummary {
	return &NullableDeviceTemplateHistorySummary{value: val, isSet: true}
}

func (v NullableDeviceTemplateHistorySummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceTemplateHistorySummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


