/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// ServiceSLMUIConfig struct for ServiceSLMUIConfig
type ServiceSLMUIConfig struct {
	Type *string `json:"type,omitempty"`
	Resources *[]ServiceUIResource `json:"resources,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServiceSLMUIConfig ServiceSLMUIConfig

// NewServiceSLMUIConfig instantiates a new ServiceSLMUIConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceSLMUIConfig() *ServiceSLMUIConfig {
	this := ServiceSLMUIConfig{}
	return &this
}

// NewServiceSLMUIConfigWithDefaults instantiates a new ServiceSLMUIConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceSLMUIConfigWithDefaults() *ServiceSLMUIConfig {
	this := ServiceSLMUIConfig{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ServiceSLMUIConfig) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSLMUIConfig) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ServiceSLMUIConfig) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ServiceSLMUIConfig) SetType(v string) {
	o.Type = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *ServiceSLMUIConfig) GetResources() []ServiceUIResource {
	if o == nil || o.Resources == nil {
		var ret []ServiceUIResource
		return ret
	}
	return *o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSLMUIConfig) GetResourcesOk() (*[]ServiceUIResource, bool) {
	if o == nil || o.Resources == nil {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *ServiceSLMUIConfig) HasResources() bool {
	if o != nil && o.Resources != nil {
		return true
	}

	return false
}

// SetResources gets a reference to the given []ServiceUIResource and assigns it to the Resources field.
func (o *ServiceSLMUIConfig) SetResources(v []ServiceUIResource) {
	o.Resources = &v
}

func (o ServiceSLMUIConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Resources != nil {
		toSerialize["resources"] = o.Resources
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ServiceSLMUIConfig) UnmarshalJSON(bytes []byte) (err error) {
	varServiceSLMUIConfig := _ServiceSLMUIConfig{}

	if err = json.Unmarshal(bytes, &varServiceSLMUIConfig); err == nil {
		*o = ServiceSLMUIConfig(varServiceSLMUIConfig)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "resources")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServiceSLMUIConfig struct {
	value *ServiceSLMUIConfig
	isSet bool
}

func (v NullableServiceSLMUIConfig) Get() *ServiceSLMUIConfig {
	return v.value
}

func (v *NullableServiceSLMUIConfig) Set(val *ServiceSLMUIConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceSLMUIConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceSLMUIConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceSLMUIConfig(val *ServiceSLMUIConfig) *NullableServiceSLMUIConfig {
	return &NullableServiceSLMUIConfig{value: val, isSet: true}
}

func (v NullableServiceSLMUIConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceSLMUIConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


