/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
)

// SmartUserAccountsAllOf struct for SmartUserAccountsAllOf
type SmartUserAccountsAllOf struct {
	Accounts *[]SmartAccountUser `json:"accounts,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SmartUserAccountsAllOf SmartUserAccountsAllOf

// NewSmartUserAccountsAllOf instantiates a new SmartUserAccountsAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmartUserAccountsAllOf() *SmartUserAccountsAllOf {
	this := SmartUserAccountsAllOf{}
	return &this
}

// NewSmartUserAccountsAllOfWithDefaults instantiates a new SmartUserAccountsAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmartUserAccountsAllOfWithDefaults() *SmartUserAccountsAllOf {
	this := SmartUserAccountsAllOf{}
	return &this
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *SmartUserAccountsAllOf) GetAccounts() []SmartAccountUser {
	if o == nil || o.Accounts == nil {
		var ret []SmartAccountUser
		return ret
	}
	return *o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmartUserAccountsAllOf) GetAccountsOk() (*[]SmartAccountUser, bool) {
	if o == nil || o.Accounts == nil {
		return nil, false
	}
	return o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *SmartUserAccountsAllOf) HasAccounts() bool {
	if o != nil && o.Accounts != nil {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given []SmartAccountUser and assigns it to the Accounts field.
func (o *SmartUserAccountsAllOf) SetAccounts(v []SmartAccountUser) {
	o.Accounts = &v
}

func (o SmartUserAccountsAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accounts != nil {
		toSerialize["accounts"] = o.Accounts
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *SmartUserAccountsAllOf) UnmarshalJSON(bytes []byte) (err error) {
	varSmartUserAccountsAllOf := _SmartUserAccountsAllOf{}

	if err = json.Unmarshal(bytes, &varSmartUserAccountsAllOf); err == nil {
		*o = SmartUserAccountsAllOf(varSmartUserAccountsAllOf)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "accounts")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSmartUserAccountsAllOf struct {
	value *SmartUserAccountsAllOf
	isSet bool
}

func (v NullableSmartUserAccountsAllOf) Get() *SmartUserAccountsAllOf {
	return v.value
}

func (v *NullableSmartUserAccountsAllOf) Set(val *SmartUserAccountsAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSmartUserAccountsAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSmartUserAccountsAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmartUserAccountsAllOf(val *SmartUserAccountsAllOf) *NullableSmartUserAccountsAllOf {
	return &NullableSmartUserAccountsAllOf{value: val, isSet: true}
}

func (v NullableSmartUserAccountsAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmartUserAccountsAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


