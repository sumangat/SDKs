/*
 * MSX SDK
 *
 * MSX SDK client.
 *
 * API version: 1.0.9
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msxsdk

import (
	"encoding/json"
	"time"
)

// VulnerabilityRegistrationAllOf struct for VulnerabilityRegistrationAllOf
type VulnerabilityRegistrationAllOf struct {
	Id *string `json:"id,omitempty"`
	RegisteredOn *time.Time `json:"registeredOn,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _VulnerabilityRegistrationAllOf VulnerabilityRegistrationAllOf

// NewVulnerabilityRegistrationAllOf instantiates a new VulnerabilityRegistrationAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVulnerabilityRegistrationAllOf() *VulnerabilityRegistrationAllOf {
	this := VulnerabilityRegistrationAllOf{}
	return &this
}

// NewVulnerabilityRegistrationAllOfWithDefaults instantiates a new VulnerabilityRegistrationAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVulnerabilityRegistrationAllOfWithDefaults() *VulnerabilityRegistrationAllOf {
	this := VulnerabilityRegistrationAllOf{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VulnerabilityRegistrationAllOf) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityRegistrationAllOf) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VulnerabilityRegistrationAllOf) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VulnerabilityRegistrationAllOf) SetId(v string) {
	o.Id = &v
}

// GetRegisteredOn returns the RegisteredOn field value if set, zero value otherwise.
func (o *VulnerabilityRegistrationAllOf) GetRegisteredOn() time.Time {
	if o == nil || o.RegisteredOn == nil {
		var ret time.Time
		return ret
	}
	return *o.RegisteredOn
}

// GetRegisteredOnOk returns a tuple with the RegisteredOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityRegistrationAllOf) GetRegisteredOnOk() (*time.Time, bool) {
	if o == nil || o.RegisteredOn == nil {
		return nil, false
	}
	return o.RegisteredOn, true
}

// HasRegisteredOn returns a boolean if a field has been set.
func (o *VulnerabilityRegistrationAllOf) HasRegisteredOn() bool {
	if o != nil && o.RegisteredOn != nil {
		return true
	}

	return false
}

// SetRegisteredOn gets a reference to the given time.Time and assigns it to the RegisteredOn field.
func (o *VulnerabilityRegistrationAllOf) SetRegisteredOn(v time.Time) {
	o.RegisteredOn = &v
}

func (o VulnerabilityRegistrationAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.RegisteredOn != nil {
		toSerialize["registeredOn"] = o.RegisteredOn
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *VulnerabilityRegistrationAllOf) UnmarshalJSON(bytes []byte) (err error) {
	varVulnerabilityRegistrationAllOf := _VulnerabilityRegistrationAllOf{}

	if err = json.Unmarshal(bytes, &varVulnerabilityRegistrationAllOf); err == nil {
		*o = VulnerabilityRegistrationAllOf(varVulnerabilityRegistrationAllOf)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "registeredOn")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVulnerabilityRegistrationAllOf struct {
	value *VulnerabilityRegistrationAllOf
	isSet bool
}

func (v NullableVulnerabilityRegistrationAllOf) Get() *VulnerabilityRegistrationAllOf {
	return v.value
}

func (v *NullableVulnerabilityRegistrationAllOf) Set(val *VulnerabilityRegistrationAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableVulnerabilityRegistrationAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableVulnerabilityRegistrationAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVulnerabilityRegistrationAllOf(val *VulnerabilityRegistrationAllOf) *NullableVulnerabilityRegistrationAllOf {
	return &NullableVulnerabilityRegistrationAllOf{value: val, isSet: true}
}

func (v NullableVulnerabilityRegistrationAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVulnerabilityRegistrationAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


